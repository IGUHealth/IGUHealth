name: Asset Uploads

on:
  release:
    types: [published]

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout

jobs:
  build_api_reference:
    environment: production
    name: Upload API Reference
    runs-on: ubuntu-latest
    # These permissions are needed to interact with GitHub's OIDC Token endpoint.
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: EnableCorePack
        run: corepack enable

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 22.14.0
          cache: "yarn"

      - name: Yarn Setup
        run: corepack prepare yarn@4.7.0 --activate

      - name: Version Check
        run: yarn version check

      - name: Install
        run: yarn

      - name: Compile
        run: yarn build

      - name: Compile documentation
        run: yarn generate-documentation

      - name: Configure AWS credentials from Github account
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::611909812228:role/iguhealth_github_action_user
          aws-region: us-east-1

      - name: Copy files to the production website with the AWS CLI
        run: |
          aws s3 sync ./docs s3://api-reference.iguhealth.app

  build_docs:
    environment: production
    name: Upload Docs
    runs-on: ubuntu-latest
    # These permissions are needed to interact with GitHub's OIDC Token endpoint.
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: EnableCorePack
        run: corepack enable

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 22.14.0
          cache: "yarn"

      - name: Yarn Setup
        run: corepack prepare yarn@4.7.0 --activate

      - name: Version Check
        run: yarn version check

      - name: Install
        run: sh install.sh

      - name: Build Documentation
        run: yarn workspaces foreach -ptR --topological-dev --from @iguhealth/docs run build

        env:
          GOOGLE_GTAG_TRACKING_ID: ${{ secrets.GOOGLE_GTAG_TRACKING_ID }}
          IGUHEALTH_TENANT_URL: ${{ secrets.DOCUMENTATION_IGUHEALTH_TENANT }}
          IGUHEALTH_CLIENT_ID: ${{ secrets.DOCUMENTATION_IGUHEALTH_CLIENT_ID }}
          IGUHEALTH_CLIENT_SECRET: ${{ secrets.DOCUMENTATION_IGUHEALTH_CLIENT_SECRET }}

      - name: Deploy Documentation
        run: yarn workspace @iguhealth/docs deploy
        env:
          CLOUDFLARE_ACCOUNT_ID: secrets.CLOUDFLARE_ACCOUNT_ID
          CLOUDFLARE_API_TOKEN: secrets.CLOUDFLARE_API_TOKEN

  build_story_book:
    environment: production
    name: Upload Storybook to S3
    runs-on: ubuntu-latest
    # These permissions are needed to interact with GitHub's OIDC Token endpoint.
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: EnableCorePack
        run: corepack enable

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 22.14.0
          cache: "yarn"

      - name: Yarn Setup
        run: corepack prepare yarn@4.7.0 --activate

      - name: Version Check
        run: yarn version check

      - name: Install
        run: sh install.sh

      - name: Build Storybook
        run: yarn workspaces foreach -ptR --topological-dev --from @iguhealth/components run build

      - name: Compile storybook
        run: yarn workspace @iguhealth/components build-storybook

      - name: Configure AWS credentials from Github account
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::611909812228:role/iguhealth_github_action_user
          aws-region: us-east-1
      - name: Copy files to the production website with the AWS CLI
        run: |
          aws s3 sync packages/components/storybook-static s3://storybook.iguhealth.app
