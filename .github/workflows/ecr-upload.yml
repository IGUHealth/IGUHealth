name: ECR Upload

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout
on:
  # Because pull from npm wait until packages have been published.
  workflow_run:
    workflows: ["Lambda Docker Images", "Docker Images"]
    types: [completed]

jobs:
  upload-ecr:
    environment: production
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Configure AWS credentials from Github account
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::611909812228:role/iguhealth_github_action_user
          aws-region: us-east-1

      - name: Log in to registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin

      - name: Pull all github images
        run: |
          docker pull ghcr.io/iguhealth/iguhealth/iguhealth:latest
          docker pull ghcr.io/iguhealth/iguhealth/admin-app:latest
          docker pull ghcr.io/iguhealth/iguhealth/iguhealth-server-lambda:latest
          docker pull ghcr.io/iguhealth/iguhealth/iguhealth-storage-lambda:latest
          docker pull ghcr.io/iguhealth/iguhealth/iguhealth-indexing-lambda:latest
          docker pull ghcr.io/iguhealth/iguhealth/iguhealth-subscription-v1-lambda:latest
          docker pull ghcr.io/iguhealth/iguhealth/iguhealth-migration-lambda:latest

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - id: serverless_package_json_version
        run: |
          content=`cat ./packages/serverless/package.json`
          content="${content//'%'/'%25'}"
          content="${content//$'\n'/'%0A'}"
          content="${content//$'\r'/'%0D'}"
          # end of optional handling for multi line json
          echo "::set-output name=packageJson::$content"

      - id: server_package_json_version
        run: |
          content=`cat ./packages/server/package.json`
          content="${content//'%'/'%25'}"
          content="${content//$'\n'/'%0A'}"
          content="${content//$'\r'/'%0D'}"
          # end of optional handling for multi line json
          echo "::set-output name=packageJson::$content"

      - id: admin_app_package_json_version
        run: |
          content=`cat ./packages/admin-app/package.json`
          content="${content//'%'/'%25'}"
          content="${content//$'\n'/'%0A'}"
          content="${content//$'\r'/'%0D'}"
          # end of optional handling for multi line json
          echo "::set-output name=packageJson::$content"

      - name: Tag and push images to ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          SERVERLESS_VERSION=$(echo "${{fromJson(steps.serverless_package_json_version.outputs.packageJson).version}}")
          SERVER_VERSION=$(echo "${{fromJson(steps.server_package_json_version.outputs.packageJson).version}}")
          ADMIN_APP_VERSION=$(echo "${{fromJson(steps.admin_app_package_json_version.outputs.packageJson).version}}")

          docker tag ghcr.io/iguhealth/iguhealth/iguhealth:latest $REGISTRY/iguhealth-server:latest
          docker tag ghcr.io/iguhealth/iguhealth/iguhealth:latest $REGISTRY/iguhealth-server:$SERVER_VERSION
          docker push $REGISTRY/iguhealth-server:latest
          docker push $REGISTRY/iguhealth-server:$SERVER_VERSION

          docker tag ghcr.io/iguhealth/iguhealth/admin-app:latest $REGISTRY/iguhealth-admin-app:latest
          docker tag ghcr.io/iguhealth/iguhealth/admin-app:latest $REGISTRY/iguhealth-admin-app:$ADMIN_APP_VERSION
          docker push $REGISTRY/iguhealth-admin-app:latest
          docker push $REGISTRY/iguhealth-admin-app:$ADMIN_APP_VERSION

          docker tag ghcr.io/iguhealth/iguhealth/iguhealth-server-lambda:latest $REGISTRY/iguhealth-server-lambda:latest
          docker tag ghcr.io/iguhealth/iguhealth/iguhealth-server-lambda:latest $REGISTRY/iguhealth-server-lambda:$SERVERLESS_VERSION
          docker push $REGISTRY/iguhealth-server-lambda:latest
          docker push $REGISTRY/iguhealth-server-lambda:$SERVERLESS_VERSION

          docker tag ghcr.io/iguhealth/iguhealth/iguhealth-storage-lambda:latest $REGISTRY/iguhealth-storage-lambda:latest
          docker tag ghcr.io/iguhealth/iguhealth/iguhealth-storage-lambda:latest $REGISTRY/iguhealth-storage-lambda:$SERVERLESS_VERSION
          docker push $REGISTRY/iguhealth-storage-lambda:latest
          docker push $REGISTRY/iguhealth-storage-lambda:$SERVERLESS_VERSION

          docker tag ghcr.io/iguhealth/iguhealth/iguhealth-indexing-lambda:latest $REGISTRY/iguhealth-indexing-lambda:latest
          docker tag ghcr.io/iguhealth/iguhealth/iguhealth-indexing-lambda:latest $REGISTRY/iguhealth-indexing-lambda:$SERVERLESS_VERSION
          docker push $REGISTRY/iguhealth-indexing-lambda:latest
          docker push $REGISTRY/iguhealth-indexing-lambda:$SERVERLESS_VERSION

          docker tag ghcr.io/iguhealth/iguhealth/iguhealth-subscription-v1-lambda:latest $REGISTRY/iguhealth-subscription-v1-lambda:latest
          docker tag ghcr.io/iguhealth/iguhealth/iguhealth-subscription-v1-lambda:latest $REGISTRY/iguhealth-subscription-v1-lambda:$SERVERLESS_VERSION
          docker push $REGISTRY/iguhealth-subscription-v1-lambda:latest
          docker push $REGISTRY/iguhealth-subscription-v1-lambda:$SERVERLESS_VERSION

          docker tag ghcr.io/iguhealth/iguhealth/iguhealth-migration-lambda:latest $REGISTRY/iguhealth-migration-lambda:latest
          docker tag ghcr.io/iguhealth/iguhealth/iguhealth-migration-lambda:latest $REGISTRY/iguhealth-migration-lambda:$SERVERLESS_VERSION
          docker push $REGISTRY/iguhealth-migration-lambda:latest
          docker push $REGISTRY/iguhealth-migration-lambda:$SERVERLESS_VERSION
