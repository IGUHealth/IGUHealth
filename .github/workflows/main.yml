name: Workflow for Codecov example-javascript
on: [push, pull_request]
jobs:
  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
  linting:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 21.6.1
          cache: "yarn"

      - name: EnableCorePack
        run: corepack enable

      - name: Yarn v4
        run: corepack prepare yarn@4.1.1 --activate

      - name: Version Check
        run: yarn version check

      - name: Install dependencies
        run: yarn
      - name: Lint
        run: yarn eslint packages/server --quiet && yarn eslint packages/components --quiet && yarn eslint packages/admin-app --quiet
  server-tests:
    runs-on: ubuntu-latest
    env:
      NODE_ENV: development
      API_URL: http://localhost:3000
      FHIR_DATABASE_NAME: postgres
      FHIR_DATABASE_HOST: localhost
      FHIR_DATABASE_PORT: 5432
      FHIR_DATABASE_PASSWORD: "postgres"
      FHIR_DATABASE_USERNAME: postgres
      REDIS_HOST: localhost
      REDIS_PORT: 6379
      SESSION_COOKIE_SECRETS: "session-secret"
      RATE_LIMIT_MAX: 10000000
    services:
      redis:
        # Docker Hub image
        image: redis
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps port 6379 on service container to the host
          - 6379:6379
      postgres:
        # Docker Hub image
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Provide the password for postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 21.6.1
          cache: "yarn"

      - name: EnableCorePack
        run: corepack enable

      - name: Yarn Setup
        run: corepack prepare yarn@4.1.1 --activate

      - name: Version Check
        run: yarn version check

      - name: Build
        run: sh install.sh

      - name: Migrate
        run: yarn workspace @iguhealth/server migrate up

      - name: Create Test environment.
        run: |
          yarn workspace @iguhealth/server cli admin tenant create -i test-system -t team -e test@iguhealth.app -p testing
          CLIENT_APP=$(yarn workspace @iguhealth/server cli admin client-app create -t test-system -s mysecret)
          yarn workspace @iguhealth/server iguhealth config add-tenant \
           --name my-tenant \
           --url http://localhost:3000 \
           --id test-system \
           --client-secret $(echo $CLIENT_APP | jq -r '.secret') \
           --client-id $(echo $CLIENT_APP | jq -r '.id')
      - name: Quick Test on root
        run: cat ~/.iguhealth/config.toml

      - name: Start server
        run: yarn workspace @iguhealth/server ci & node .github/workflows/wait_server.js http://localhost:3000/w/test-system/oidc/interaction/login

      - name: TestScripts
        run: yarn workspace @iguhealth/server iguhealth test run -i  testscripts -o testreports

      - name: Jest tests
        run: yarn workspaces foreach -A run test
        timeout-minutes: 10

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
