name: Workflow for Codecov example-javascript
on: [push, pull_request]
jobs:
  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
  linting:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: EnableCorePack
        run: corepack enable

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 22.14.0
          cache: "yarn"

      - name: Yarn v4
        run: corepack prepare yarn@4.7.0 --activate

      - name: Version Check
        run: yarn version check

      - name: Install dependencies
        run: yarn
      - name: Lint
        run: yarn eslint packages/server --quiet && yarn eslint packages/components --quiet && yarn eslint packages/admin-app --quiet

  server-tests:
    runs-on: ubuntu-latest
    env:
      NODE_ENV: development
      API_URL: http://localhost:3000
      AUTH_ISSUER: http://localhost:3000

      RESOURCE_STORE_PG_NAME: postgres
      RESOURCE_STORE_PG_HOST: localhost
      RESOURCE_STORE_PG_PORT: 5432
      RESOURCE_STORE_PG_USERNAME: postgres
      RESOURCE_STORE_PG_PASSWORD: postgres

      SEARCH_STORE_PG_NAME: postgres
      SEARCH_STORE_PG_HOST: localhost
      SEARCH_STORE_PG_PORT: 5432
      SEARCH_STORE_PG_USERNAME: postgres
      SEARCH_STORE_PG_PASSWORD: postgres

      ARTIFACT_DB_TYPE: postgres
      ARTIFACT_DB_PG_NAME: artifact
      ARTIFACT_DB_PG_HOST: localhost
      ARTIFACT_DB_PG_PORT: 5432
      ARTIFACT_DB_PG_USERNAME: postgres
      ARTIFACT_DB_PG_PASSWORD: postgres

      REDIS_HOST: localhost
      REDIS_PORT: 6379
      SESSION_COOKIE_SECRETS: "session-secret"

    services:
      redis:
        image: redis
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      kafka:
        image: apache/kafka-native:3.9.0
        ports:
          - 9092:9092
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: EnableCorePack
        run: corepack enable

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 22.14.0
          cache: "yarn"

      - name: Yarn Setup
        run: corepack prepare yarn@4.7.0 --activate

      - name: Version Check
        run: yarn version check

      - name: Build
        run: sh install.sh

      - name: Migrate Schemas
        run: |
          yarn workspace @iguhealth/server cli migrate all

      - name: Load Terminology
        run: yarn workspace @iguhealth/server cli terminology load --system iso-4217 iso-3166 bcp-13

      - name: Start server
        run: yarn workspace @iguhealth/server ci & node .github/workflows/wait_server.js http://localhost:3000/w/system/oidc/.well-known/openid-configuration

      - name: Wait Artifacts
        run: node .github/workflows/wait_artifacts.js

      - name: Create Test environment.
        env:
          CLIENT_ID: test-client
          CLIENT_SECRET: mysecret
        run: |
          yarn workspace @iguhealth/server cli admin tenant create -i test-system -t unlimited -e test@iguhealth.app -p testing
          yarn workspace @iguhealth/server cli admin client-app create -t test-system -i $CLIENT_ID -s $CLIENT_SECRET
          yarn workspace @iguhealth/server iguhealth config add-tenant \
           --name tenant1 \
           --r4-url http://localhost:3000/w/test-system/api/v1/fhir/r4 \
           --r4b-url http://localhost:3000/w/test-system/api/v1/fhir/r4b \
           --oidc http://localhost:3000/w/test-system/oidc/.well-known/openid-configuration \
           --auth client_credentials \
           --client-id $CLIENT_ID \
           --client-secret $CLIENT_SECRET

      - name: R4 TestScripts
        run: yarn workspace @iguhealth/server iguhealth test run -i  testscripts/r4 -t 500

      - name: R4B TestScripts
        run: yarn workspace @iguhealth/server iguhealth test run --fhir-version 4.3 -i testscripts/r4b -t 500

      - name: Subscription Testscripts
        env:
          CLIENT_ID: test-client
          CLIENT_SECRET: mysecret
        run: |
          yarn workspace @iguhealth/server cli admin tenant create -i test-system2 -t unlimited -e test2@iguhealth.app -p testing
          yarn workspace @iguhealth/server cli admin client-app create -t test-system2 -i $CLIENT_ID -s $CLIENT_SECRET
          yarn workspace @iguhealth/server iguhealth config add-tenant \
           --name tenant2 \
           --r4-url http://localhost:3000/w/test-system2/api/v1/fhir/r4 \
           --r4b-url http://localhost:3000/w/test-system2/api/v1/fhir/r4b \
           --oidc http://localhost:3000/w/test-system2/oidc/.well-known/openid-configuration \
           --auth client_credentials \
           --client-id $CLIENT_ID \
           --client-secret $CLIENT_SECRET
          yarn workspace @iguhealth/server iguhealth config  switch-tenant -t tenant2
          yarn workspace @iguhealth/server iguhealth test run -i testscripts/subscription-test/r4/setup.testscript.json  -t 500
          yarn workspace @iguhealth/server iguhealth config  switch-tenant -t tenant1
          yarn workspace @iguhealth/server iguhealth test run -i testscripts/subscription-test/r4/qr-check/from.testscript.json   -t 500
          yarn workspace @iguhealth/server iguhealth config  switch-tenant -t tenant2
          yarn workspace @iguhealth/server iguhealth test run -i testscripts/subscription-test/r4/qr-check/to.testscript.json   -t 500

      - name: Jest tests
        run: yarn test
        timeout-minutes: 10

      - name: Performance Test
        env:
          FHIR_R4_URL: http://localhost:3000/w/test-system/api/v1/fhir/r4
          OIDC_WELL_KNOWN_URL: http://localhost:3000/w/test-system/oidc/.well-known/openid-configuration
          CLIENT_ID: performance-testing
          CLIENT_SECRET: mysecret
        run: |
          yarn workspace @iguhealth/server cli admin client-app create -t test-system -i $CLIENT_ID -s $CLIENT_SECRET
          yarn workspace @iguhealth/performance-testing artillery run scripts/observation-performance.yaml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
