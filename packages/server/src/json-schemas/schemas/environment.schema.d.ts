/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface IGUHealthEnvironment {
  /**
   * Secret used to sign session cookies
   */
  SESSION_COOKIE_SECRETS: string;
  /**
   * Postgres database name.
   */
  FHIR_DATABASE_NAME: string;
  /**
   * Postgres host
   */
  FHIR_DATABASE_HOST: string;
  /**
   * Postgres port
   */
  FHIR_DATABASE_PORT: string;
  /**
   * postgres password
   */
  FHIR_DATABASE_PASSWORD: string;
  /**
   * postgres username
   */
  FHIR_DATABASE_USERNAME: string;
  /**
   * Whether Postgres connection is SSL
   */
  FHIR_DATABASE_SSL?: "true" | "false";
  /**
   * Redis host
   */
  REDIS_HOST: string;
  /**
   * Redis port
   */
  REDIS_PORT: string;
  /**
   * Whether Redis connection is SSL
   */
  REDIS_SSL?: "true" | "false";
  /**
   * Current url where API is hosted from (used in operation execution clients).
   */
  API_URL?: string;
  /**
   * AWS Region where you want lambdas to be executed from.
   */
  AWS_REGION?: string;
  /**
   * Execution role of lambda functions.
   */
  AWS_LAMBDA_ROLE?: string;
  /**
   * Access key id for lambda (must have permission to invoke and create lambda functions)
   */
  AWS_LAMBDA_ACCESS_KEY_ID?: string;
  /**
   * Access key secret for lambda (must have permission to invoke and create lambda functions).
   */
  AWS_LAMBDA_ACCESS_KEY_SECRET?: string;
  /**
   * ARN Layer for lambda (current expectation is layer installed with all @iguhealth packages).
   */
  AWS_LAMBDA_LAYER_ARN?: string;
  /**
   * Sets the server to allow full public access when set to true.
   */
  AUTH_PUBLIC_ACCESS?: "true" | "false";
  /**
   * Sets whether to allow global signup for users.
   */
  AUTH_ALLOW_GLOBAL_SIGNUP?: "true" | "false";
  /**
   * Sets whether to allow tenant signup for users.
   */
  AUTH_ALLOW_TENANT_SIGNUP?: "true" | "false";
  /**
   * Location for local certifications for IGUHEALTH ISSUER
   */
  AUTH_LOCAL_CERTIFICATION_LOCATION?: string;
  /**
   * The signing key used to generate new local tokens
   */
  AUTH_LOCAL_SIGNING_KEY?: string;
  /**
   * JWK remote url to pull JSON WEB Key Set.
   */
  AUTH_EXTERNAL_JWK_URI?: string;
  /**
   * Issuer of the JWT.
   */
  AUTH_EXTERNAL_JWT_ISSUER?: string;
  /**
   * Set the email provider
   */
  EMAIL_PROVIDER?: "sendgrid";
  /**
   * Set the sendgrid api key (only used on email provider set to sendgrid)
   */
  EMAIL_SENDGRID_API_KEY?: string;
  /**
   * The type of encryption (used to encrypt user secrets)
   */
  ENCRYPTION_TYPE?: "aws";
  /**
   * KMS client access key ID
   */
  AWS_KMS_ACCESS_KEY_ID?: string;
  /**
   * KMS client access key secret
   */
  AWS_KMS_ACCESS_KEY_SECRET?: string;
  /**
   * KMS key used to generate data keys on keyring
   */
  AWS_ENCRYPTION_GENERATOR_KEY?: string;
  /**
   * Additional KMS key used for encryption
   */
  AWS_ENCRYPTION_KEY?: string;
  /**
   * Rate limiting amount per minute
   */
  RATE_LIMIT_MAX?: string;
  /**
   * Postgres transaction entry limit
   */
  POSTGRES_TRANSACTION_ENTRY_LIMIT?: string;
  /**
   * Sentry DSN URL for monitoring errors and performance.
   */
  SENTRY_SERVER_DSN?: string;
  /**
   * Sentry Worker for monitoring errors and performance on worker
   */
  SENTRY_WORKER_DSN?: string;
  /**
   * Sentry sample rate.
   */
  SENTRY_TRACES_SAMPLE_RATE?: string;
  /**
   * Sentry profiles rate.
   */
  SENTRY_PROFILES_SAMPLE_RATE?: string;
  /**
   * Redirect URI for admin app
   */
  ADMIN_APP_REDIRECT_URI?: string;
  [k: string]: unknown;
}
