AWSTemplateFormatVersion: 2010-09-09
Description: >-
  iguhealth-server
Transform:
  - AWS::Serverless-2016-10-31

# Resources declares the AWS resources that you want to include in the stack
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/resources-section-structure.html
Resources:
  # Each Lambda function is defined by properties:
  # https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction

  iguhealth:
    Type: AWS::Serverless::Function
    Properties:
      Handler: dist/index.handler
      Runtime: nodejs22.x
      Architectures:
        - x86_64
      MemorySize: 1024
      Timeout: 500
      Description: IGUHealth server.
      # Policies:
      #   # Give Create/Read/Update/Delete Permissions to the SampleTable
      #   - DynamoDBCrudPolicy:
      #       TableName: !Ref SampleTable
      Environment:
        Variables:
          RESOURCE_STORE_TYPE: "postgres"
          RESOURCE_STORE_PG_NAME: "iguhealth"
          "RESOURCE_STORE_PG_HOST": "docker.for.mac.localhost"
          "RESOURCE_STORE_PG_PORT": "5432"
          "RESOURCE_STORE_PG_PASSWORD": "postgres"
          "RESOURCE_STORE_PG_USERNAME": "postgres"
          "SEARCH_STORE_TYPE": "postgres"
          "SEARCH_STORE_PG_NAME": "iguhealth"
          "SEARCH_STORE_PG_HOST": "docker.for.mac.localhost"
          "SEARCH_STORE_PG_PORT": "5432"
          "SEARCH_STORE_PG_PASSWORD": "postgres"
          "SEARCH_STORE_PG_USERNAME": "postgres"
          "ARTIFACT_DB_TYPE": "postgres"
          "ARTIFACT_DB_PG_NAME": "iguhealth_artifact"
          "ARTIFACT_DB_PG_HOST": "docker.for.mac.localhost"
          "ARTIFACT_DB_PG_PORT": "5432"
          "ARTIFACT_DB_PG_PASSWORD": "postgres"
          "ARTIFACT_DB_PG_USERNAME": "postgres"
          "RATE_LIMIT_MAX": "1000000000000"
          "REDIS_HOST": "127.0.0.1"
          "REDIS_PORT": "6379"
          "NODE_ENV": "development"
          "EMAIL_FROM": "dev@iguhealth.app"
          "EMAIL_PROVIDER": "sendgrid"
          "API_URL": "http://localhost:3000"
          "AUTH_ISSUER": "http://localhost:3000"
          "AUTH_LOCAL_CERTIFICATION_LOCATION": "./certifications"
          "ADMIN_APP_REDIRECT_URI": "http://*.localhost:3001"
          "AUTH_ALLOW_GLOBAL_SIGNUP": true
          "IGUHEALTH_ENVIRONMENT": "development"
          "QUEUE_TYPE": "kafka"
          "QUEUE_BROKERS": "docker.for.mac.localhost:9092"
          "QUEUE_CLIENT_ID": "iguhealth"
          # Secrets need to be defined for pull in env.json file
          "SESSION_COOKIE_SECRETS":
          "EMAIL_SENDGRID_API_KEY":
          "AUTH_LOCAL_SIGNING_KEY":
          "AWS_REGION":
          "AWS_LAMBDA_ACCESS_KEY_ID":
          "AWS_LAMBDA_ACCESS_KEY_SECRET":
          "AWS_LAMBDA_ROLE":
          "AWS_LAMBDA_LAYER_ARN":
          "ENCRYPTION_TYPE": aws
          "AWS_KMS_ACCESS_KEY_ID":
          "AWS_KMS_ACCESS_KEY_SECRET":
          "AWS_ENCRYPTION_GENERATOR_KEY":
          "AWS_ENCRYPTION_KEY":

      Events:
        Api:
          Type: Api
          Properties:
            Path: /{all+}
            Method: ANY

Outputs:
  WebEndpoint:
    Description: API Gateway endpoint URL for Prod stage
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    LoggingConfig:
      LogFormat: JSON
