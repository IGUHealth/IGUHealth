"use strict";
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.PeggySyntaxError = exports.parse = void 0;
var peggyParser = // Generated by Peggy 3.0.2.
 
//
// https://peggyjs.org/
// @ts-ignore
(function () {
    // @ts-ignore
    "use strict";
    // @ts-ignore
    function peg$subclass(child, parent) {
        // @ts-ignore
        function C() { this.constructor = child; }
        // @ts-ignore
        C.prototype = parent.prototype;
        // @ts-ignore
        child.prototype = new C();
    }
    // @ts-ignore
    function peg$SyntaxError(message, expected, found, location) {
        // @ts-ignore
        var self = Error.call(this, message);
        // istanbul ignore next Check is a necessary evil to support older environments
        // @ts-ignore
        if (Object.setPrototypeOf) {
            // @ts-ignore
            Object.setPrototypeOf(self, peg$SyntaxError.prototype);
        }
        // @ts-ignore
        self.expected = expected;
        // @ts-ignore
        self.found = found;
        // @ts-ignore
        self.location = location;
        // @ts-ignore
        self.name = "SyntaxError";
        // @ts-ignore
        return self;
    }
    // @ts-ignore
    peg$subclass(peg$SyntaxError, Error);
    // @ts-ignore
    function peg$padEnd(str, targetLength, padString) {
        // @ts-ignore
        padString = padString || " ";
        // @ts-ignore
        if (str.length > targetLength) {
            return str;
        }
        // @ts-ignore
        targetLength -= str.length;
        // @ts-ignore
        padString += padString.repeat(targetLength);
        // @ts-ignore
        return str + padString.slice(0, targetLength);
    }
    // @ts-ignore
    peg$SyntaxError.prototype.format = function (sources) {
        // @ts-ignore
        var str = "Error: " + this.message;
        // @ts-ignore
        if (this.location) {
            // @ts-ignore
            var src = null;
            // @ts-ignore
            var k;
            // @ts-ignore
            for (k = 0; k < sources.length; k++) {
                // @ts-ignore
                if (sources[k].source === this.location.source) {
                    // @ts-ignore
                    src = sources[k].text.split(/\r\n|\n|\r/g);
                    // @ts-ignore
                    break;
                }
            }
            // @ts-ignore
            var s = this.location.start;
            // @ts-ignore
            var offset_s = (this.location.source && (typeof this.location.source.offset === "function"))
                // @ts-ignore
                ? this.location.source.offset(s)
                // @ts-ignore
                : s;
            // @ts-ignore
            var loc = this.location.source + ":" + offset_s.line + ":" + offset_s.column;
            // @ts-ignore
            if (src) {
                // @ts-ignore
                var e = this.location.end;
                // @ts-ignore
                var filler = peg$padEnd("", offset_s.line.toString().length, ' ');
                // @ts-ignore
                var line = src[s.line - 1];
                // @ts-ignore
                var last = s.line === e.line ? e.column : line.length + 1;
                // @ts-ignore
                var hatLen = (last - s.column) || 1;
                // @ts-ignore
                str += "\n --> " + loc + "\n"
                    // @ts-ignore
                    + filler + " |\n"
                    // @ts-ignore
                    + offset_s.line + " | " + line + "\n"
                    // @ts-ignore
                    + filler + " | " + peg$padEnd("", s.column - 1, ' ')
                    // @ts-ignore
                    + peg$padEnd("", hatLen, "^");
                // @ts-ignore
            }
            else {
                // @ts-ignore
                str += "\n at " + loc;
            }
        }
        // @ts-ignore
        return str;
    };
    // @ts-ignore
    peg$SyntaxError.buildMessage = function (expected, found) {
        // @ts-ignore
        var DESCRIBE_EXPECTATION_FNS = {
            // @ts-ignore
            literal: function (expectation) {
                // @ts-ignore
                return "\"" + literalEscape(expectation.text) + "\"";
            },
            // @ts-ignore
            class: function (expectation) {
                // @ts-ignore
                var escapedParts = expectation.parts.map(function (part) {
                    // @ts-ignore
                    return Array.isArray(part)
                        // @ts-ignore
                        ? classEscape(part[0]) + "-" + classEscape(part[1])
                        // @ts-ignore
                        : classEscape(part);
                });
                // @ts-ignore
                return "[" + (expectation.inverted ? "^" : "") + escapedParts.join("") + "]";
            },
            // @ts-ignore
            any: function () {
                // @ts-ignore
                return "any character";
            },
            // @ts-ignore
            end: function () {
                // @ts-ignore
                return "end of input";
            },
            // @ts-ignore
            other: function (expectation) {
                // @ts-ignore
                return expectation.description;
            }
        };
        // @ts-ignore
        function hex(ch) {
            // @ts-ignore
            return ch.charCodeAt(0).toString(16).toUpperCase();
        }
        // @ts-ignore
        function literalEscape(s) {
            // @ts-ignore
            return s
                // @ts-ignore
                .replace(/\\/g, "\\\\")
                // @ts-ignore
                .replace(/"/g, "\\\"")
                // @ts-ignore
                .replace(/\0/g, "\\0")
                // @ts-ignore
                .replace(/\t/g, "\\t")
                // @ts-ignore
                .replace(/\n/g, "\\n")
                // @ts-ignore
                .replace(/\r/g, "\\r")
                // @ts-ignore
                .replace(/[\x00-\x0F]/g, function (ch) { return "\\x0" + hex(ch); })
                // @ts-ignore
                .replace(/[\x10-\x1F\x7F-\x9F]/g, function (ch) { return "\\x" + hex(ch); });
        }
        // @ts-ignore
        function classEscape(s) {
            // @ts-ignore
            return s
                // @ts-ignore
                .replace(/\\/g, "\\\\")
                // @ts-ignore
                .replace(/\]/g, "\\]")
                // @ts-ignore
                .replace(/\^/g, "\\^")
                // @ts-ignore
                .replace(/-/g, "\\-")
                // @ts-ignore
                .replace(/\0/g, "\\0")
                // @ts-ignore
                .replace(/\t/g, "\\t")
                // @ts-ignore
                .replace(/\n/g, "\\n")
                // @ts-ignore
                .replace(/\r/g, "\\r")
                // @ts-ignore
                .replace(/[\x00-\x0F]/g, function (ch) { return "\\x0" + hex(ch); })
                // @ts-ignore
                .replace(/[\x10-\x1F\x7F-\x9F]/g, function (ch) { return "\\x" + hex(ch); });
        }
        // @ts-ignore
        function describeExpectation(expectation) {
            // @ts-ignore
            return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);
        }
        // @ts-ignore
        function describeExpected(expected) {
            // @ts-ignore
            var descriptions = expected.map(describeExpectation);
            // @ts-ignore
            var i, j;
            // @ts-ignore
            descriptions.sort();
            // @ts-ignore
            if (descriptions.length > 0) {
                // @ts-ignore
                for (i = 1, j = 1; i < descriptions.length; i++) {
                    // @ts-ignore
                    if (descriptions[i - 1] !== descriptions[i]) {
                        // @ts-ignore
                        descriptions[j] = descriptions[i];
                        // @ts-ignore
                        j++;
                    }
                }
                // @ts-ignore
                descriptions.length = j;
            }
            // @ts-ignore
            switch (descriptions.length) {
                // @ts-ignore
                case 1:
                    // @ts-ignore
                    return descriptions[0];
                // @ts-ignore
                case 2:
                    // @ts-ignore
                    return descriptions[0] + " or " + descriptions[1];
                // @ts-ignore
                default:
                    // @ts-ignore
                    return descriptions.slice(0, -1).join(", ")
                        // @ts-ignore
                        + ", or "
                        // @ts-ignore
                        + descriptions[descriptions.length - 1];
            }
        }
        // @ts-ignore
        function describeFound(found) {
            // @ts-ignore
            return found ? "\"" + literalEscape(found) + "\"" : "end of input";
        }
        // @ts-ignore
        return "Expected " + describeExpected(expected) + " but " + describeFound(found) + " found.";
    };
    // @ts-ignore
    function peg$parse(input, options) {
        // @ts-ignore
        options = options !== undefined ? options : {};
        // @ts-ignore
        var peg$FAILED = {};
        // @ts-ignore
        var peg$source = options.grammarSource;
        // @ts-ignore
        var peg$startRuleFunctions = { expression: peg$parseexpression };
        // @ts-ignore
        var peg$startRuleFunction = peg$parseexpression;
        // @ts-ignore
        var peg$c0 = "<=";
        var peg$c1 = "<";
        var peg$c2 = ">";
        var peg$c3 = ">=";
        var peg$c4 = "=";
        var peg$c5 = "~";
        var peg$c6 = "!=";
        var peg$c7 = "!~";
        var peg$c8 = "+";
        var peg$c9 = "-";
        var peg$c10 = "&";
        var peg$c11 = "*";
        var peg$c12 = "/";
        var peg$c13 = "div";
        var peg$c14 = "mod";
        var peg$c15 = "|";
        var peg$c16 = "in";
        var peg$c17 = "contains";
        var peg$c18 = "and";
        var peg$c19 = "or";
        var peg$c20 = "xor";
        var peg$c21 = "implies";
        var peg$c22 = ".";
        var peg$c23 = "[";
        var peg$c24 = "]";
        var peg$c25 = "(";
        var peg$c26 = ")";
        var peg$c27 = "{";
        var peg$c28 = "}";
        var peg$c29 = "true";
        var peg$c30 = "false";
        var peg$c31 = "%";
        var peg$c32 = "$this";
        var peg$c33 = "$index";
        var peg$c34 = "$total";
        var peg$c35 = ",";
        var peg$c36 = "year";
        var peg$c37 = "month";
        var peg$c38 = "week";
        var peg$c39 = "day";
        var peg$c40 = "hour";
        var peg$c41 = "minute";
        var peg$c42 = "second";
        var peg$c43 = "millisecond";
        var peg$c44 = "years";
        var peg$c45 = "months";
        var peg$c46 = "weeks";
        var peg$c47 = "days";
        var peg$c48 = "hours";
        var peg$c49 = "minutes";
        var peg$c50 = "seconds";
        var peg$c51 = "milliseconds";
        var peg$c52 = "@";
        var peg$c53 = "T";
        var peg$c54 = ":";
        var peg$c55 = "Z";
        var peg$c56 = "_";
        var peg$c57 = "`";
        var peg$c58 = "'";
        var peg$c59 = "\t";
        var peg$c60 = "\r";
        var peg$c61 = "\n";
        var peg$c62 = " ";
        var peg$r0 = /^[0-9]/;
        var peg$r1 = /^[A-Za-z]/;
        var peg$r2 = /^[A-Za-z0-9]/;
        var peg$r3 = /^[^`]/;
        var peg$r4 = /^[^']/;
        var peg$e0 = peg$literalExpectation("<=", false);
        var peg$e1 = peg$literalExpectation("<", false);
        var peg$e2 = peg$literalExpectation(">", false);
        var peg$e3 = peg$literalExpectation(">=", false);
        var peg$e4 = peg$literalExpectation("=", false);
        var peg$e5 = peg$literalExpectation("~", false);
        var peg$e6 = peg$literalExpectation("!=", false);
        var peg$e7 = peg$literalExpectation("!~", false);
        var peg$e8 = peg$literalExpectation("+", false);
        var peg$e9 = peg$literalExpectation("-", false);
        var peg$e10 = peg$literalExpectation("&", false);
        var peg$e11 = peg$literalExpectation("*", false);
        var peg$e12 = peg$literalExpectation("/", false);
        var peg$e13 = peg$literalExpectation("div", false);
        var peg$e14 = peg$literalExpectation("mod", false);
        var peg$e15 = peg$literalExpectation("|", false);
        var peg$e16 = peg$literalExpectation("in", false);
        var peg$e17 = peg$literalExpectation("contains", false);
        var peg$e18 = peg$literalExpectation("and", false);
        var peg$e19 = peg$literalExpectation("or", false);
        var peg$e20 = peg$literalExpectation("xor", false);
        var peg$e21 = peg$literalExpectation("implies", false);
        var peg$e22 = peg$literalExpectation(".", false);
        var peg$e23 = peg$literalExpectation("[", false);
        var peg$e24 = peg$literalExpectation("]", false);
        var peg$e25 = peg$literalExpectation("(", false);
        var peg$e26 = peg$literalExpectation(")", false);
        var peg$e27 = peg$literalExpectation("{", false);
        var peg$e28 = peg$literalExpectation("}", false);
        var peg$e29 = peg$literalExpectation("true", false);
        var peg$e30 = peg$literalExpectation("false", false);
        var peg$e31 = peg$classExpectation([["0", "9"]], false, false);
        var peg$e32 = peg$literalExpectation("%", false);
        var peg$e33 = peg$literalExpectation("$this", false);
        var peg$e34 = peg$literalExpectation("$index", false);
        var peg$e35 = peg$literalExpectation("$total", false);
        var peg$e36 = peg$literalExpectation(",", false);
        var peg$e37 = peg$literalExpectation("year", false);
        var peg$e38 = peg$literalExpectation("month", false);
        var peg$e39 = peg$literalExpectation("week", false);
        var peg$e40 = peg$literalExpectation("day", false);
        var peg$e41 = peg$literalExpectation("hour", false);
        var peg$e42 = peg$literalExpectation("minute", false);
        var peg$e43 = peg$literalExpectation("second", false);
        var peg$e44 = peg$literalExpectation("millisecond", false);
        var peg$e45 = peg$literalExpectation("years", false);
        var peg$e46 = peg$literalExpectation("months", false);
        var peg$e47 = peg$literalExpectation("weeks", false);
        var peg$e48 = peg$literalExpectation("days", false);
        var peg$e49 = peg$literalExpectation("hours", false);
        var peg$e50 = peg$literalExpectation("minutes", false);
        var peg$e51 = peg$literalExpectation("seconds", false);
        var peg$e52 = peg$literalExpectation("milliseconds", false);
        var peg$e53 = peg$literalExpectation("@", false);
        var peg$e54 = peg$literalExpectation("T", false);
        var peg$e55 = peg$literalExpectation(":", false);
        var peg$e56 = peg$literalExpectation("Z", false);
        var peg$e57 = peg$classExpectation([["A", "Z"], ["a", "z"]], false, false);
        var peg$e58 = peg$literalExpectation("_", false);
        var peg$e59 = peg$classExpectation([["A", "Z"], ["a", "z"], ["0", "9"]], false, false);
        var peg$e60 = peg$literalExpectation("`", false);
        var peg$e61 = peg$classExpectation(["`"], true, false);
        var peg$e62 = peg$literalExpectation("'", false);
        var peg$e63 = peg$classExpectation(["'"], true, false);
        var peg$e64 = peg$otherExpectation("whitespace");
        var peg$e65 = peg$literalExpectation("\t", false);
        var peg$e66 = peg$literalExpectation("\r", false);
        var peg$e67 = peg$literalExpectation("\n", false);
        var peg$e68 = peg$literalExpectation(" ", false);
        // @ts-ignore
        var peg$f0 = function (expression) {
            return buildNode("Expression", expression);
        }; // @ts-ignore
        var peg$f1 = function (term, child) {
            return buildNode("Term", term, child);
        }; // @ts-ignore
        var peg$f2 = function (head, tail) {
            return buildBinaryExpression(head, tail);
        }; // @ts-ignore
        var peg$f3 = function (head, tail) {
            return buildBinaryExpression(head, tail);
        }; // @ts-ignore
        var peg$f4 = function (head, tail) {
            return buildBinaryExpression(head, tail);
        }; // @ts-ignore
        var peg$f5 = function (head, tail) {
            return buildBinaryExpression(head, tail);
        }; // @ts-ignore
        var peg$f6 = function (head, tail) {
            return buildBinaryExpression(head, tail);
        }; // @ts-ignore
        var peg$f7 = function (head, tail) {
            return buildBinaryExpression(head, tail);
        }; // @ts-ignore
        var peg$f8 = function (head, tail) {
            return buildBinaryExpression(head, tail);
        }; // @ts-ignore
        var peg$f9 = function (head, tail) {
            return buildBinaryExpression(head, tail);
        }; // @ts-ignore
        var peg$f10 = function (invocation, child) {
            return buildNode("DotAccess", invocation, child);
        }; // @ts-ignore
        var peg$f11 = function (expression, child) {
            return buildNode("Indexed", expression, child);
        }; // @ts-ignore
        var peg$f12 = function (expression) {
            return expression;
        }; // @ts-ignore
        var peg$f13 = function () {
            return null;
        }; // @ts-ignore
        var peg$f14 = function (bool) {
            return bool === "true";
        }; // @ts-ignore
        var peg$f15 = function (num) {
            return Number(num);
        }; // @ts-ignore
        var peg$f16 = function (value) {
            return buildNode("Literal", value);
        }; // @ts-ignore
        var peg$f17 = function (variable) {
            return buildNode("Variable", variable);
        }; // @ts-ignore
        var peg$f18 = function () {
            return buildNode("This");
        }; // @ts-ignore
        var peg$f19 = function () {
            return buildNode("Index");
        }; // @ts-ignore
        var peg$f20 = function () {
            return buildNode("Total");
        }; // @ts-ignore
        var peg$f21 = function (identifier, paramList) {
            return buildNode("Function", identifier, paramList || []);
        }; // @ts-ignore
        var peg$f22 = function (head, tail) {
            return [head].concat(tail.map(function (element) { return element[2]; }));
        }; // @ts-ignore
        var peg$f23 = function (value, unit) {
            return { value: value, unit: unit };
        }; // @ts-ignore
        var peg$f24 = function (identifier) {
            return buildNode("Identifier", identifier);
        }; // @ts-ignore
        var peg$f25 = function (identifier) {
            return buildNode("Identifier", identifier);
        }; // @ts-ignore
        var peg$f26 = function (date) {
            return date;
        }; // @ts-ignore
        var peg$f27 = function (datetime) {
            return datetime;
        }; // @ts-ignore
        var peg$f28 = function (time) {
            return time;
        }; // @ts-ignore
        var peg$f29 = function (id) {
            return id;
        }; // @ts-ignore
        var peg$f30 = function (str) {
            return str;
        };
        // @ts-ignore
        var peg$currPos = 0;
        // @ts-ignore
        var peg$savedPos = 0;
        // @ts-ignore
        var peg$posDetailsCache = [{ line: 1, column: 1 }];
        // @ts-ignore
        var peg$maxFailPos = 0;
        // @ts-ignore
        var peg$maxFailExpected = [];
        // @ts-ignore
        var peg$silentFails = 0;
        // @ts-ignore
        var peg$resultsCache = {};
        // @ts-ignore
        var peg$result;
        // @ts-ignore
        if ("startRule" in options) {
            // @ts-ignore
            if (!(options.startRule in peg$startRuleFunctions)) {
                // @ts-ignore
                throw new Error("Can't start parsing from rule \"" + options.startRule + "\".");
            }
            // @ts-ignore
            peg$startRuleFunction = peg$startRuleFunctions[options.startRule];
        }
        // @ts-ignore
        function text() {
            // @ts-ignore
            return input.substring(peg$savedPos, peg$currPos);
        }
        // @ts-ignore
        function offset() {
            // @ts-ignore
            return peg$savedPos;
        }
        // @ts-ignore
        function range() {
            // @ts-ignore
            return {
                // @ts-ignore
                source: peg$source,
                // @ts-ignore
                start: peg$savedPos,
                // @ts-ignore
                end: peg$currPos
            };
        }
        // @ts-ignore
        function location() {
            // @ts-ignore
            return peg$computeLocation(peg$savedPos, peg$currPos);
        }
        // @ts-ignore
        function expected(description, location) {
            // @ts-ignore
            location = location !== undefined
                // @ts-ignore
                ? location
                // @ts-ignore
                : peg$computeLocation(peg$savedPos, peg$currPos);
            // @ts-ignore
            throw peg$buildStructuredError(
            // @ts-ignore
            [peg$otherExpectation(description)], 
            // @ts-ignore
            input.substring(peg$savedPos, peg$currPos), 
            // @ts-ignore
            location);
        }
        // @ts-ignore
        function error(message, location) {
            // @ts-ignore
            location = location !== undefined
                // @ts-ignore
                ? location
                // @ts-ignore
                : peg$computeLocation(peg$savedPos, peg$currPos);
            // @ts-ignore
            throw peg$buildSimpleError(message, location);
        }
        // @ts-ignore
        function peg$literalExpectation(text, ignoreCase) {
            // @ts-ignore
            return { type: "literal", text: text, ignoreCase: ignoreCase };
        }
        // @ts-ignore
        function peg$classExpectation(parts, inverted, ignoreCase) {
            // @ts-ignore
            return { type: "class", parts: parts, inverted: inverted, ignoreCase: ignoreCase };
        }
        // @ts-ignore
        function peg$anyExpectation() {
            // @ts-ignore
            return { type: "any" };
        }
        // @ts-ignore
        function peg$endExpectation() {
            // @ts-ignore
            return { type: "end" };
        }
        // @ts-ignore
        function peg$otherExpectation(description) {
            // @ts-ignore
            return { type: "other", description: description };
        }
        // @ts-ignore
        function peg$computePosDetails(pos) {
            // @ts-ignore
            var details = peg$posDetailsCache[pos];
            // @ts-ignore
            var p;
            // @ts-ignore
            if (details) {
                // @ts-ignore
                return details;
                // @ts-ignore
            }
            else {
                // @ts-ignore
                p = pos - 1;
                // @ts-ignore
                while (!peg$posDetailsCache[p]) {
                    // @ts-ignore
                    p--;
                }
                // @ts-ignore
                details = peg$posDetailsCache[p];
                // @ts-ignore
                details = {
                    // @ts-ignore
                    line: details.line,
                    // @ts-ignore
                    column: details.column
                };
                // @ts-ignore
                while (p < pos) {
                    // @ts-ignore
                    if (input.charCodeAt(p) === 10) {
                        // @ts-ignore
                        details.line++;
                        // @ts-ignore
                        details.column = 1;
                        // @ts-ignore
                    }
                    else {
                        // @ts-ignore
                        details.column++;
                    }
                    // @ts-ignore
                    p++;
                }
                // @ts-ignore
                peg$posDetailsCache[pos] = details;
                // @ts-ignore
                return details;
            }
        }
        // @ts-ignore
        function peg$computeLocation(startPos, endPos, offset) {
            // @ts-ignore
            var startPosDetails = peg$computePosDetails(startPos);
            // @ts-ignore
            var endPosDetails = peg$computePosDetails(endPos);
            // @ts-ignore
            var res = {
                // @ts-ignore
                source: peg$source,
                // @ts-ignore
                start: {
                    // @ts-ignore
                    offset: startPos,
                    // @ts-ignore
                    line: startPosDetails.line,
                    // @ts-ignore
                    column: startPosDetails.column
                },
                // @ts-ignore
                end: {
                    // @ts-ignore
                    offset: endPos,
                    // @ts-ignore
                    line: endPosDetails.line,
                    // @ts-ignore
                    column: endPosDetails.column
                }
            };
            // @ts-ignore
            if (offset && peg$source && (typeof peg$source.offset === "function")) {
                // @ts-ignore
                res.start = peg$source.offset(res.start);
                // @ts-ignore
                res.end = peg$source.offset(res.end);
            }
            // @ts-ignore
            return res;
        }
        // @ts-ignore
        function peg$fail(expected) {
            // @ts-ignore
            if (peg$currPos < peg$maxFailPos) {
                return;
            }
            // @ts-ignore
            if (peg$currPos > peg$maxFailPos) {
                // @ts-ignore
                peg$maxFailPos = peg$currPos;
                // @ts-ignore
                peg$maxFailExpected = [];
            }
            // @ts-ignore
            peg$maxFailExpected.push(expected);
        }
        // @ts-ignore
        function peg$buildSimpleError(message, location) {
            // @ts-ignore
            return new peg$SyntaxError(message, null, null, location);
        }
        // @ts-ignore
        function peg$buildStructuredError(expected, found, location) {
            // @ts-ignore
            return new peg$SyntaxError(
            // @ts-ignore
            peg$SyntaxError.buildMessage(expected, found), 
            // @ts-ignore
            expected, 
            // @ts-ignore
            found, 
            // @ts-ignore
            location);
        }
        // @ts-ignore
        function peg$parseexpression() {
            // @ts-ignore
            var s0, s1, s2, s3;
            // @ts-ignore
            var key = peg$currPos * 35 + 0;
            // @ts-ignore
            var cached = peg$resultsCache[key];
            // @ts-ignore
            if (cached) {
                // @ts-ignore
                peg$currPos = cached.nextPos;
                // @ts-ignore
                return cached.result;
            }
            // @ts-ignore
            s0 = peg$currPos;
            // @ts-ignore
            s1 = peg$parseWS();
            // @ts-ignore
            s2 = peg$parseequality_operation();
            // @ts-ignore
            if (s2 !== peg$FAILED) {
                // @ts-ignore
                s3 = peg$parseWS();
                // @ts-ignore
                peg$savedPos = s0;
                // @ts-ignore
                s0 = peg$f0(s2);
                // @ts-ignore
            }
            else {
                // @ts-ignore
                peg$currPos = s0;
                // @ts-ignore
                s0 = peg$FAILED;
            }
            // @ts-ignore
            peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };
            // @ts-ignore
            return s0;
        }
        // @ts-ignore
        function peg$parsenon_op() {
            // @ts-ignore
            var s0, s1, s2;
            // @ts-ignore
            var key = peg$currPos * 35 + 1;
            // @ts-ignore
            var cached = peg$resultsCache[key];
            // @ts-ignore
            if (cached) {
                // @ts-ignore
                peg$currPos = cached.nextPos;
                // @ts-ignore
                return cached.result;
            }
            // @ts-ignore
            s0 = peg$currPos;
            // @ts-ignore
            s1 = peg$parseterm();
            // @ts-ignore
            if (s1 !== peg$FAILED) {
                // @ts-ignore
                s2 = peg$parseexpression_inner();
                // @ts-ignore
                if (s2 === peg$FAILED) {
                    // @ts-ignore
                    s2 = null;
                }
                // @ts-ignore
                peg$savedPos = s0;
                // @ts-ignore
                s0 = peg$f1(s1, s2);
                // @ts-ignore
            }
            else {
                // @ts-ignore
                peg$currPos = s0;
                // @ts-ignore
                s0 = peg$FAILED;
            }
            // @ts-ignore
            peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };
            // @ts-ignore
            return s0;
        }
        // @ts-ignore
        function peg$parseequality_operation() {
            // @ts-ignore
            var s0, s1, s2, s3, s4, s5, s6, s7;
            // @ts-ignore
            var key = peg$currPos * 35 + 2;
            // @ts-ignore
            var cached = peg$resultsCache[key];
            // @ts-ignore
            if (cached) {
                // @ts-ignore
                peg$currPos = cached.nextPos;
                // @ts-ignore
                return cached.result;
            }
            // @ts-ignore
            s0 = peg$currPos;
            // @ts-ignore
            s1 = peg$parseadditive_operation();
            // @ts-ignore
            if (s1 !== peg$FAILED) {
                // @ts-ignore
                s2 = peg$parseWS();
                // @ts-ignore
                s3 = [];
                // @ts-ignore
                s4 = peg$currPos;
                // @ts-ignore
                if (input.substr(peg$currPos, 2) === peg$c0) {
                    // @ts-ignore
                    s5 = peg$c0;
                    // @ts-ignore
                    peg$currPos += 2;
                    // @ts-ignore
                }
                else {
                    // @ts-ignore
                    s5 = peg$FAILED;
                    // @ts-ignore
                    if (peg$silentFails === 0) {
                        peg$fail(peg$e0);
                    }
                }
                // @ts-ignore
                if (s5 === peg$FAILED) {
                    // @ts-ignore
                    if (input.charCodeAt(peg$currPos) === 60) {
                        // @ts-ignore
                        s5 = peg$c1;
                        // @ts-ignore
                        peg$currPos++;
                        // @ts-ignore
                    }
                    else {
                        // @ts-ignore
                        s5 = peg$FAILED;
                        // @ts-ignore
                        if (peg$silentFails === 0) {
                            peg$fail(peg$e1);
                        }
                    }
                    // @ts-ignore
                    if (s5 === peg$FAILED) {
                        // @ts-ignore
                        if (input.charCodeAt(peg$currPos) === 62) {
                            // @ts-ignore
                            s5 = peg$c2;
                            // @ts-ignore
                            peg$currPos++;
                            // @ts-ignore
                        }
                        else {
                            // @ts-ignore
                            s5 = peg$FAILED;
                            // @ts-ignore
                            if (peg$silentFails === 0) {
                                peg$fail(peg$e2);
                            }
                        }
                        // @ts-ignore
                        if (s5 === peg$FAILED) {
                            // @ts-ignore
                            if (input.substr(peg$currPos, 2) === peg$c3) {
                                // @ts-ignore
                                s5 = peg$c3;
                                // @ts-ignore
                                peg$currPos += 2;
                                // @ts-ignore
                            }
                            else {
                                // @ts-ignore
                                s5 = peg$FAILED;
                                // @ts-ignore
                                if (peg$silentFails === 0) {
                                    peg$fail(peg$e3);
                                }
                            }
                            // @ts-ignore
                            if (s5 === peg$FAILED) {
                                // @ts-ignore
                                if (input.charCodeAt(peg$currPos) === 61) {
                                    // @ts-ignore
                                    s5 = peg$c4;
                                    // @ts-ignore
                                    peg$currPos++;
                                    // @ts-ignore
                                }
                                else {
                                    // @ts-ignore
                                    s5 = peg$FAILED;
                                    // @ts-ignore
                                    if (peg$silentFails === 0) {
                                        peg$fail(peg$e4);
                                    }
                                }
                                // @ts-ignore
                                if (s5 === peg$FAILED) {
                                    // @ts-ignore
                                    if (input.charCodeAt(peg$currPos) === 126) {
                                        // @ts-ignore
                                        s5 = peg$c5;
                                        // @ts-ignore
                                        peg$currPos++;
                                        // @ts-ignore
                                    }
                                    else {
                                        // @ts-ignore
                                        s5 = peg$FAILED;
                                        // @ts-ignore
                                        if (peg$silentFails === 0) {
                                            peg$fail(peg$e5);
                                        }
                                    }
                                    // @ts-ignore
                                    if (s5 === peg$FAILED) {
                                        // @ts-ignore
                                        if (input.substr(peg$currPos, 2) === peg$c6) {
                                            // @ts-ignore
                                            s5 = peg$c6;
                                            // @ts-ignore
                                            peg$currPos += 2;
                                            // @ts-ignore
                                        }
                                        else {
                                            // @ts-ignore
                                            s5 = peg$FAILED;
                                            // @ts-ignore
                                            if (peg$silentFails === 0) {
                                                peg$fail(peg$e6);
                                            }
                                        }
                                        // @ts-ignore
                                        if (s5 === peg$FAILED) {
                                            // @ts-ignore
                                            if (input.substr(peg$currPos, 2) === peg$c7) {
                                                // @ts-ignore
                                                s5 = peg$c7;
                                                // @ts-ignore
                                                peg$currPos += 2;
                                                // @ts-ignore
                                            }
                                            else {
                                                // @ts-ignore
                                                s5 = peg$FAILED;
                                                // @ts-ignore
                                                if (peg$silentFails === 0) {
                                                    peg$fail(peg$e7);
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                // @ts-ignore
                if (s5 !== peg$FAILED) {
                    // @ts-ignore
                    s6 = peg$parseWS();
                    // @ts-ignore
                    s7 = peg$parseadditive_operation();
                    // @ts-ignore
                    if (s7 !== peg$FAILED) {
                        // @ts-ignore
                        s5 = [s5, s6, s7];
                        // @ts-ignore
                        s4 = s5;
                        // @ts-ignore
                    }
                    else {
                        // @ts-ignore
                        peg$currPos = s4;
                        // @ts-ignore
                        s4 = peg$FAILED;
                    }
                    // @ts-ignore
                }
                else {
                    // @ts-ignore
                    peg$currPos = s4;
                    // @ts-ignore
                    s4 = peg$FAILED;
                }
                // @ts-ignore
                while (s4 !== peg$FAILED) {
                    // @ts-ignore
                    s3.push(s4);
                    // @ts-ignore
                    s4 = peg$currPos;
                    // @ts-ignore
                    if (input.substr(peg$currPos, 2) === peg$c0) {
                        // @ts-ignore
                        s5 = peg$c0;
                        // @ts-ignore
                        peg$currPos += 2;
                        // @ts-ignore
                    }
                    else {
                        // @ts-ignore
                        s5 = peg$FAILED;
                        // @ts-ignore
                        if (peg$silentFails === 0) {
                            peg$fail(peg$e0);
                        }
                    }
                    // @ts-ignore
                    if (s5 === peg$FAILED) {
                        // @ts-ignore
                        if (input.charCodeAt(peg$currPos) === 60) {
                            // @ts-ignore
                            s5 = peg$c1;
                            // @ts-ignore
                            peg$currPos++;
                            // @ts-ignore
                        }
                        else {
                            // @ts-ignore
                            s5 = peg$FAILED;
                            // @ts-ignore
                            if (peg$silentFails === 0) {
                                peg$fail(peg$e1);
                            }
                        }
                        // @ts-ignore
                        if (s5 === peg$FAILED) {
                            // @ts-ignore
                            if (input.charCodeAt(peg$currPos) === 62) {
                                // @ts-ignore
                                s5 = peg$c2;
                                // @ts-ignore
                                peg$currPos++;
                                // @ts-ignore
                            }
                            else {
                                // @ts-ignore
                                s5 = peg$FAILED;
                                // @ts-ignore
                                if (peg$silentFails === 0) {
                                    peg$fail(peg$e2);
                                }
                            }
                            // @ts-ignore
                            if (s5 === peg$FAILED) {
                                // @ts-ignore
                                if (input.substr(peg$currPos, 2) === peg$c3) {
                                    // @ts-ignore
                                    s5 = peg$c3;
                                    // @ts-ignore
                                    peg$currPos += 2;
                                    // @ts-ignore
                                }
                                else {
                                    // @ts-ignore
                                    s5 = peg$FAILED;
                                    // @ts-ignore
                                    if (peg$silentFails === 0) {
                                        peg$fail(peg$e3);
                                    }
                                }
                                // @ts-ignore
                                if (s5 === peg$FAILED) {
                                    // @ts-ignore
                                    if (input.charCodeAt(peg$currPos) === 61) {
                                        // @ts-ignore
                                        s5 = peg$c4;
                                        // @ts-ignore
                                        peg$currPos++;
                                        // @ts-ignore
                                    }
                                    else {
                                        // @ts-ignore
                                        s5 = peg$FAILED;
                                        // @ts-ignore
                                        if (peg$silentFails === 0) {
                                            peg$fail(peg$e4);
                                        }
                                    }
                                    // @ts-ignore
                                    if (s5 === peg$FAILED) {
                                        // @ts-ignore
                                        if (input.charCodeAt(peg$currPos) === 126) {
                                            // @ts-ignore
                                            s5 = peg$c5;
                                            // @ts-ignore
                                            peg$currPos++;
                                            // @ts-ignore
                                        }
                                        else {
                                            // @ts-ignore
                                            s5 = peg$FAILED;
                                            // @ts-ignore
                                            if (peg$silentFails === 0) {
                                                peg$fail(peg$e5);
                                            }
                                        }
                                        // @ts-ignore
                                        if (s5 === peg$FAILED) {
                                            // @ts-ignore
                                            if (input.substr(peg$currPos, 2) === peg$c6) {
                                                // @ts-ignore
                                                s5 = peg$c6;
                                                // @ts-ignore
                                                peg$currPos += 2;
                                                // @ts-ignore
                                            }
                                            else {
                                                // @ts-ignore
                                                s5 = peg$FAILED;
                                                // @ts-ignore
                                                if (peg$silentFails === 0) {
                                                    peg$fail(peg$e6);
                                                }
                                            }
                                            // @ts-ignore
                                            if (s5 === peg$FAILED) {
                                                // @ts-ignore
                                                if (input.substr(peg$currPos, 2) === peg$c7) {
                                                    // @ts-ignore
                                                    s5 = peg$c7;
                                                    // @ts-ignore
                                                    peg$currPos += 2;
                                                    // @ts-ignore
                                                }
                                                else {
                                                    // @ts-ignore
                                                    s5 = peg$FAILED;
                                                    // @ts-ignore
                                                    if (peg$silentFails === 0) {
                                                        peg$fail(peg$e7);
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                    // @ts-ignore
                    if (s5 !== peg$FAILED) {
                        // @ts-ignore
                        s6 = peg$parseWS();
                        // @ts-ignore
                        s7 = peg$parseadditive_operation();
                        // @ts-ignore
                        if (s7 !== peg$FAILED) {
                            // @ts-ignore
                            s5 = [s5, s6, s7];
                            // @ts-ignore
                            s4 = s5;
                            // @ts-ignore
                        }
                        else {
                            // @ts-ignore
                            peg$currPos = s4;
                            // @ts-ignore
                            s4 = peg$FAILED;
                        }
                        // @ts-ignore
                    }
                    else {
                        // @ts-ignore
                        peg$currPos = s4;
                        // @ts-ignore
                        s4 = peg$FAILED;
                    }
                }
                // @ts-ignore
                peg$savedPos = s0;
                // @ts-ignore
                s0 = peg$f2(s1, s3);
                // @ts-ignore
            }
            else {
                // @ts-ignore
                peg$currPos = s0;
                // @ts-ignore
                s0 = peg$FAILED;
            }
            // @ts-ignore
            peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };
            // @ts-ignore
            return s0;
        }
        // @ts-ignore
        function peg$parseadditive_operation() {
            // @ts-ignore
            var s0, s1, s2, s3, s4, s5, s6, s7;
            // @ts-ignore
            var key = peg$currPos * 35 + 3;
            // @ts-ignore
            var cached = peg$resultsCache[key];
            // @ts-ignore
            if (cached) {
                // @ts-ignore
                peg$currPos = cached.nextPos;
                // @ts-ignore
                return cached.result;
            }
            // @ts-ignore
            s0 = peg$currPos;
            // @ts-ignore
            s1 = peg$parsemultiplication_operation();
            // @ts-ignore
            if (s1 !== peg$FAILED) {
                // @ts-ignore
                s2 = peg$parseWS();
                // @ts-ignore
                s3 = [];
                // @ts-ignore
                s4 = peg$currPos;
                // @ts-ignore
                if (input.charCodeAt(peg$currPos) === 43) {
                    // @ts-ignore
                    s5 = peg$c8;
                    // @ts-ignore
                    peg$currPos++;
                    // @ts-ignore
                }
                else {
                    // @ts-ignore
                    s5 = peg$FAILED;
                    // @ts-ignore
                    if (peg$silentFails === 0) {
                        peg$fail(peg$e8);
                    }
                }
                // @ts-ignore
                if (s5 === peg$FAILED) {
                    // @ts-ignore
                    if (input.charCodeAt(peg$currPos) === 45) {
                        // @ts-ignore
                        s5 = peg$c9;
                        // @ts-ignore
                        peg$currPos++;
                        // @ts-ignore
                    }
                    else {
                        // @ts-ignore
                        s5 = peg$FAILED;
                        // @ts-ignore
                        if (peg$silentFails === 0) {
                            peg$fail(peg$e9);
                        }
                    }
                    // @ts-ignore
                    if (s5 === peg$FAILED) {
                        // @ts-ignore
                        if (input.charCodeAt(peg$currPos) === 38) {
                            // @ts-ignore
                            s5 = peg$c10;
                            // @ts-ignore
                            peg$currPos++;
                            // @ts-ignore
                        }
                        else {
                            // @ts-ignore
                            s5 = peg$FAILED;
                            // @ts-ignore
                            if (peg$silentFails === 0) {
                                peg$fail(peg$e10);
                            }
                        }
                    }
                }
                // @ts-ignore
                if (s5 !== peg$FAILED) {
                    // @ts-ignore
                    s6 = peg$parseWS();
                    // @ts-ignore
                    s7 = peg$parsemultiplication_operation();
                    // @ts-ignore
                    if (s7 !== peg$FAILED) {
                        // @ts-ignore
                        s5 = [s5, s6, s7];
                        // @ts-ignore
                        s4 = s5;
                        // @ts-ignore
                    }
                    else {
                        // @ts-ignore
                        peg$currPos = s4;
                        // @ts-ignore
                        s4 = peg$FAILED;
                    }
                    // @ts-ignore
                }
                else {
                    // @ts-ignore
                    peg$currPos = s4;
                    // @ts-ignore
                    s4 = peg$FAILED;
                }
                // @ts-ignore
                while (s4 !== peg$FAILED) {
                    // @ts-ignore
                    s3.push(s4);
                    // @ts-ignore
                    s4 = peg$currPos;
                    // @ts-ignore
                    if (input.charCodeAt(peg$currPos) === 43) {
                        // @ts-ignore
                        s5 = peg$c8;
                        // @ts-ignore
                        peg$currPos++;
                        // @ts-ignore
                    }
                    else {
                        // @ts-ignore
                        s5 = peg$FAILED;
                        // @ts-ignore
                        if (peg$silentFails === 0) {
                            peg$fail(peg$e8);
                        }
                    }
                    // @ts-ignore
                    if (s5 === peg$FAILED) {
                        // @ts-ignore
                        if (input.charCodeAt(peg$currPos) === 45) {
                            // @ts-ignore
                            s5 = peg$c9;
                            // @ts-ignore
                            peg$currPos++;
                            // @ts-ignore
                        }
                        else {
                            // @ts-ignore
                            s5 = peg$FAILED;
                            // @ts-ignore
                            if (peg$silentFails === 0) {
                                peg$fail(peg$e9);
                            }
                        }
                        // @ts-ignore
                        if (s5 === peg$FAILED) {
                            // @ts-ignore
                            if (input.charCodeAt(peg$currPos) === 38) {
                                // @ts-ignore
                                s5 = peg$c10;
                                // @ts-ignore
                                peg$currPos++;
                                // @ts-ignore
                            }
                            else {
                                // @ts-ignore
                                s5 = peg$FAILED;
                                // @ts-ignore
                                if (peg$silentFails === 0) {
                                    peg$fail(peg$e10);
                                }
                            }
                        }
                    }
                    // @ts-ignore
                    if (s5 !== peg$FAILED) {
                        // @ts-ignore
                        s6 = peg$parseWS();
                        // @ts-ignore
                        s7 = peg$parsemultiplication_operation();
                        // @ts-ignore
                        if (s7 !== peg$FAILED) {
                            // @ts-ignore
                            s5 = [s5, s6, s7];
                            // @ts-ignore
                            s4 = s5;
                            // @ts-ignore
                        }
                        else {
                            // @ts-ignore
                            peg$currPos = s4;
                            // @ts-ignore
                            s4 = peg$FAILED;
                        }
                        // @ts-ignore
                    }
                    else {
                        // @ts-ignore
                        peg$currPos = s4;
                        // @ts-ignore
                        s4 = peg$FAILED;
                    }
                }
                // @ts-ignore
                peg$savedPos = s0;
                // @ts-ignore
                s0 = peg$f3(s1, s3);
                // @ts-ignore
            }
            else {
                // @ts-ignore
                peg$currPos = s0;
                // @ts-ignore
                s0 = peg$FAILED;
            }
            // @ts-ignore
            peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };
            // @ts-ignore
            return s0;
        }
        // @ts-ignore
        function peg$parsemultiplication_operation() {
            // @ts-ignore
            var s0, s1, s2, s3, s4, s5, s6, s7;
            // @ts-ignore
            var key = peg$currPos * 35 + 4;
            // @ts-ignore
            var cached = peg$resultsCache[key];
            // @ts-ignore
            if (cached) {
                // @ts-ignore
                peg$currPos = cached.nextPos;
                // @ts-ignore
                return cached.result;
            }
            // @ts-ignore
            s0 = peg$currPos;
            // @ts-ignore
            s1 = peg$parseunion_operation();
            // @ts-ignore
            if (s1 !== peg$FAILED) {
                // @ts-ignore
                s2 = peg$parseWS();
                // @ts-ignore
                s3 = [];
                // @ts-ignore
                s4 = peg$currPos;
                // @ts-ignore
                if (input.charCodeAt(peg$currPos) === 42) {
                    // @ts-ignore
                    s5 = peg$c11;
                    // @ts-ignore
                    peg$currPos++;
                    // @ts-ignore
                }
                else {
                    // @ts-ignore
                    s5 = peg$FAILED;
                    // @ts-ignore
                    if (peg$silentFails === 0) {
                        peg$fail(peg$e11);
                    }
                }
                // @ts-ignore
                if (s5 === peg$FAILED) {
                    // @ts-ignore
                    if (input.charCodeAt(peg$currPos) === 47) {
                        // @ts-ignore
                        s5 = peg$c12;
                        // @ts-ignore
                        peg$currPos++;
                        // @ts-ignore
                    }
                    else {
                        // @ts-ignore
                        s5 = peg$FAILED;
                        // @ts-ignore
                        if (peg$silentFails === 0) {
                            peg$fail(peg$e12);
                        }
                    }
                    // @ts-ignore
                    if (s5 === peg$FAILED) {
                        // @ts-ignore
                        if (input.substr(peg$currPos, 3) === peg$c13) {
                            // @ts-ignore
                            s5 = peg$c13;
                            // @ts-ignore
                            peg$currPos += 3;
                            // @ts-ignore
                        }
                        else {
                            // @ts-ignore
                            s5 = peg$FAILED;
                            // @ts-ignore
                            if (peg$silentFails === 0) {
                                peg$fail(peg$e13);
                            }
                        }
                        // @ts-ignore
                        if (s5 === peg$FAILED) {
                            // @ts-ignore
                            if (input.substr(peg$currPos, 3) === peg$c14) {
                                // @ts-ignore
                                s5 = peg$c14;
                                // @ts-ignore
                                peg$currPos += 3;
                                // @ts-ignore
                            }
                            else {
                                // @ts-ignore
                                s5 = peg$FAILED;
                                // @ts-ignore
                                if (peg$silentFails === 0) {
                                    peg$fail(peg$e14);
                                }
                            }
                        }
                    }
                }
                // @ts-ignore
                if (s5 !== peg$FAILED) {
                    // @ts-ignore
                    s6 = peg$parseWS();
                    // @ts-ignore
                    s7 = peg$parseunion_operation();
                    // @ts-ignore
                    if (s7 !== peg$FAILED) {
                        // @ts-ignore
                        s5 = [s5, s6, s7];
                        // @ts-ignore
                        s4 = s5;
                        // @ts-ignore
                    }
                    else {
                        // @ts-ignore
                        peg$currPos = s4;
                        // @ts-ignore
                        s4 = peg$FAILED;
                    }
                    // @ts-ignore
                }
                else {
                    // @ts-ignore
                    peg$currPos = s4;
                    // @ts-ignore
                    s4 = peg$FAILED;
                }
                // @ts-ignore
                while (s4 !== peg$FAILED) {
                    // @ts-ignore
                    s3.push(s4);
                    // @ts-ignore
                    s4 = peg$currPos;
                    // @ts-ignore
                    if (input.charCodeAt(peg$currPos) === 42) {
                        // @ts-ignore
                        s5 = peg$c11;
                        // @ts-ignore
                        peg$currPos++;
                        // @ts-ignore
                    }
                    else {
                        // @ts-ignore
                        s5 = peg$FAILED;
                        // @ts-ignore
                        if (peg$silentFails === 0) {
                            peg$fail(peg$e11);
                        }
                    }
                    // @ts-ignore
                    if (s5 === peg$FAILED) {
                        // @ts-ignore
                        if (input.charCodeAt(peg$currPos) === 47) {
                            // @ts-ignore
                            s5 = peg$c12;
                            // @ts-ignore
                            peg$currPos++;
                            // @ts-ignore
                        }
                        else {
                            // @ts-ignore
                            s5 = peg$FAILED;
                            // @ts-ignore
                            if (peg$silentFails === 0) {
                                peg$fail(peg$e12);
                            }
                        }
                        // @ts-ignore
                        if (s5 === peg$FAILED) {
                            // @ts-ignore
                            if (input.substr(peg$currPos, 3) === peg$c13) {
                                // @ts-ignore
                                s5 = peg$c13;
                                // @ts-ignore
                                peg$currPos += 3;
                                // @ts-ignore
                            }
                            else {
                                // @ts-ignore
                                s5 = peg$FAILED;
                                // @ts-ignore
                                if (peg$silentFails === 0) {
                                    peg$fail(peg$e13);
                                }
                            }
                            // @ts-ignore
                            if (s5 === peg$FAILED) {
                                // @ts-ignore
                                if (input.substr(peg$currPos, 3) === peg$c14) {
                                    // @ts-ignore
                                    s5 = peg$c14;
                                    // @ts-ignore
                                    peg$currPos += 3;
                                    // @ts-ignore
                                }
                                else {
                                    // @ts-ignore
                                    s5 = peg$FAILED;
                                    // @ts-ignore
                                    if (peg$silentFails === 0) {
                                        peg$fail(peg$e14);
                                    }
                                }
                            }
                        }
                    }
                    // @ts-ignore
                    if (s5 !== peg$FAILED) {
                        // @ts-ignore
                        s6 = peg$parseWS();
                        // @ts-ignore
                        s7 = peg$parseunion_operation();
                        // @ts-ignore
                        if (s7 !== peg$FAILED) {
                            // @ts-ignore
                            s5 = [s5, s6, s7];
                            // @ts-ignore
                            s4 = s5;
                            // @ts-ignore
                        }
                        else {
                            // @ts-ignore
                            peg$currPos = s4;
                            // @ts-ignore
                            s4 = peg$FAILED;
                        }
                        // @ts-ignore
                    }
                    else {
                        // @ts-ignore
                        peg$currPos = s4;
                        // @ts-ignore
                        s4 = peg$FAILED;
                    }
                }
                // @ts-ignore
                peg$savedPos = s0;
                // @ts-ignore
                s0 = peg$f4(s1, s3);
                // @ts-ignore
            }
            else {
                // @ts-ignore
                peg$currPos = s0;
                // @ts-ignore
                s0 = peg$FAILED;
            }
            // @ts-ignore
            peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };
            // @ts-ignore
            return s0;
        }
        // @ts-ignore
        function peg$parseunion_operation() {
            // @ts-ignore
            var s0, s1, s2, s3, s4, s5, s6, s7;
            // @ts-ignore
            var key = peg$currPos * 35 + 5;
            // @ts-ignore
            var cached = peg$resultsCache[key];
            // @ts-ignore
            if (cached) {
                // @ts-ignore
                peg$currPos = cached.nextPos;
                // @ts-ignore
                return cached.result;
            }
            // @ts-ignore
            s0 = peg$currPos;
            // @ts-ignore
            s1 = peg$parsemem_operation();
            // @ts-ignore
            if (s1 !== peg$FAILED) {
                // @ts-ignore
                s2 = peg$parseWS();
                // @ts-ignore
                s3 = [];
                // @ts-ignore
                s4 = peg$currPos;
                // @ts-ignore
                if (input.charCodeAt(peg$currPos) === 124) {
                    // @ts-ignore
                    s5 = peg$c15;
                    // @ts-ignore
                    peg$currPos++;
                    // @ts-ignore
                }
                else {
                    // @ts-ignore
                    s5 = peg$FAILED;
                    // @ts-ignore
                    if (peg$silentFails === 0) {
                        peg$fail(peg$e15);
                    }
                }
                // @ts-ignore
                if (s5 !== peg$FAILED) {
                    // @ts-ignore
                    s6 = peg$parseWS();
                    // @ts-ignore
                    s7 = peg$parsemem_operation();
                    // @ts-ignore
                    if (s7 !== peg$FAILED) {
                        // @ts-ignore
                        s5 = [s5, s6, s7];
                        // @ts-ignore
                        s4 = s5;
                        // @ts-ignore
                    }
                    else {
                        // @ts-ignore
                        peg$currPos = s4;
                        // @ts-ignore
                        s4 = peg$FAILED;
                    }
                    // @ts-ignore
                }
                else {
                    // @ts-ignore
                    peg$currPos = s4;
                    // @ts-ignore
                    s4 = peg$FAILED;
                }
                // @ts-ignore
                while (s4 !== peg$FAILED) {
                    // @ts-ignore
                    s3.push(s4);
                    // @ts-ignore
                    s4 = peg$currPos;
                    // @ts-ignore
                    if (input.charCodeAt(peg$currPos) === 124) {
                        // @ts-ignore
                        s5 = peg$c15;
                        // @ts-ignore
                        peg$currPos++;
                        // @ts-ignore
                    }
                    else {
                        // @ts-ignore
                        s5 = peg$FAILED;
                        // @ts-ignore
                        if (peg$silentFails === 0) {
                            peg$fail(peg$e15);
                        }
                    }
                    // @ts-ignore
                    if (s5 !== peg$FAILED) {
                        // @ts-ignore
                        s6 = peg$parseWS();
                        // @ts-ignore
                        s7 = peg$parsemem_operation();
                        // @ts-ignore
                        if (s7 !== peg$FAILED) {
                            // @ts-ignore
                            s5 = [s5, s6, s7];
                            // @ts-ignore
                            s4 = s5;
                            // @ts-ignore
                        }
                        else {
                            // @ts-ignore
                            peg$currPos = s4;
                            // @ts-ignore
                            s4 = peg$FAILED;
                        }
                        // @ts-ignore
                    }
                    else {
                        // @ts-ignore
                        peg$currPos = s4;
                        // @ts-ignore
                        s4 = peg$FAILED;
                    }
                }
                // @ts-ignore
                peg$savedPos = s0;
                // @ts-ignore
                s0 = peg$f5(s1, s3);
                // @ts-ignore
            }
            else {
                // @ts-ignore
                peg$currPos = s0;
                // @ts-ignore
                s0 = peg$FAILED;
            }
            // @ts-ignore
            peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };
            // @ts-ignore
            return s0;
        }
        // @ts-ignore
        function peg$parsemem_operation() {
            // @ts-ignore
            var s0, s1, s2, s3, s4, s5, s6, s7;
            // @ts-ignore
            var key = peg$currPos * 35 + 6;
            // @ts-ignore
            var cached = peg$resultsCache[key];
            // @ts-ignore
            if (cached) {
                // @ts-ignore
                peg$currPos = cached.nextPos;
                // @ts-ignore
                return cached.result;
            }
            // @ts-ignore
            s0 = peg$currPos;
            // @ts-ignore
            s1 = peg$parseand_operation();
            // @ts-ignore
            if (s1 !== peg$FAILED) {
                // @ts-ignore
                s2 = peg$parseWS();
                // @ts-ignore
                s3 = [];
                // @ts-ignore
                s4 = peg$currPos;
                // @ts-ignore
                if (input.substr(peg$currPos, 2) === peg$c16) {
                    // @ts-ignore
                    s5 = peg$c16;
                    // @ts-ignore
                    peg$currPos += 2;
                    // @ts-ignore
                }
                else {
                    // @ts-ignore
                    s5 = peg$FAILED;
                    // @ts-ignore
                    if (peg$silentFails === 0) {
                        peg$fail(peg$e16);
                    }
                }
                // @ts-ignore
                if (s5 === peg$FAILED) {
                    // @ts-ignore
                    if (input.substr(peg$currPos, 8) === peg$c17) {
                        // @ts-ignore
                        s5 = peg$c17;
                        // @ts-ignore
                        peg$currPos += 8;
                        // @ts-ignore
                    }
                    else {
                        // @ts-ignore
                        s5 = peg$FAILED;
                        // @ts-ignore
                        if (peg$silentFails === 0) {
                            peg$fail(peg$e17);
                        }
                    }
                }
                // @ts-ignore
                if (s5 !== peg$FAILED) {
                    // @ts-ignore
                    s6 = peg$parseWS();
                    // @ts-ignore
                    s7 = peg$parseand_operation();
                    // @ts-ignore
                    if (s7 !== peg$FAILED) {
                        // @ts-ignore
                        s5 = [s5, s6, s7];
                        // @ts-ignore
                        s4 = s5;
                        // @ts-ignore
                    }
                    else {
                        // @ts-ignore
                        peg$currPos = s4;
                        // @ts-ignore
                        s4 = peg$FAILED;
                    }
                    // @ts-ignore
                }
                else {
                    // @ts-ignore
                    peg$currPos = s4;
                    // @ts-ignore
                    s4 = peg$FAILED;
                }
                // @ts-ignore
                while (s4 !== peg$FAILED) {
                    // @ts-ignore
                    s3.push(s4);
                    // @ts-ignore
                    s4 = peg$currPos;
                    // @ts-ignore
                    if (input.substr(peg$currPos, 2) === peg$c16) {
                        // @ts-ignore
                        s5 = peg$c16;
                        // @ts-ignore
                        peg$currPos += 2;
                        // @ts-ignore
                    }
                    else {
                        // @ts-ignore
                        s5 = peg$FAILED;
                        // @ts-ignore
                        if (peg$silentFails === 0) {
                            peg$fail(peg$e16);
                        }
                    }
                    // @ts-ignore
                    if (s5 === peg$FAILED) {
                        // @ts-ignore
                        if (input.substr(peg$currPos, 8) === peg$c17) {
                            // @ts-ignore
                            s5 = peg$c17;
                            // @ts-ignore
                            peg$currPos += 8;
                            // @ts-ignore
                        }
                        else {
                            // @ts-ignore
                            s5 = peg$FAILED;
                            // @ts-ignore
                            if (peg$silentFails === 0) {
                                peg$fail(peg$e17);
                            }
                        }
                    }
                    // @ts-ignore
                    if (s5 !== peg$FAILED) {
                        // @ts-ignore
                        s6 = peg$parseWS();
                        // @ts-ignore
                        s7 = peg$parseand_operation();
                        // @ts-ignore
                        if (s7 !== peg$FAILED) {
                            // @ts-ignore
                            s5 = [s5, s6, s7];
                            // @ts-ignore
                            s4 = s5;
                            // @ts-ignore
                        }
                        else {
                            // @ts-ignore
                            peg$currPos = s4;
                            // @ts-ignore
                            s4 = peg$FAILED;
                        }
                        // @ts-ignore
                    }
                    else {
                        // @ts-ignore
                        peg$currPos = s4;
                        // @ts-ignore
                        s4 = peg$FAILED;
                    }
                }
                // @ts-ignore
                peg$savedPos = s0;
                // @ts-ignore
                s0 = peg$f6(s1, s3);
                // @ts-ignore
            }
            else {
                // @ts-ignore
                peg$currPos = s0;
                // @ts-ignore
                s0 = peg$FAILED;
            }
            // @ts-ignore
            peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };
            // @ts-ignore
            return s0;
        }
        // @ts-ignore
        function peg$parseand_operation() {
            // @ts-ignore
            var s0, s1, s2, s3, s4, s5, s6, s7;
            // @ts-ignore
            var key = peg$currPos * 35 + 7;
            // @ts-ignore
            var cached = peg$resultsCache[key];
            // @ts-ignore
            if (cached) {
                // @ts-ignore
                peg$currPos = cached.nextPos;
                // @ts-ignore
                return cached.result;
            }
            // @ts-ignore
            s0 = peg$currPos;
            // @ts-ignore
            s1 = peg$parseor_operation();
            // @ts-ignore
            if (s1 !== peg$FAILED) {
                // @ts-ignore
                s2 = peg$parseWS();
                // @ts-ignore
                s3 = [];
                // @ts-ignore
                s4 = peg$currPos;
                // @ts-ignore
                if (input.substr(peg$currPos, 3) === peg$c18) {
                    // @ts-ignore
                    s5 = peg$c18;
                    // @ts-ignore
                    peg$currPos += 3;
                    // @ts-ignore
                }
                else {
                    // @ts-ignore
                    s5 = peg$FAILED;
                    // @ts-ignore
                    if (peg$silentFails === 0) {
                        peg$fail(peg$e18);
                    }
                }
                // @ts-ignore
                if (s5 !== peg$FAILED) {
                    // @ts-ignore
                    s6 = peg$parseWS();
                    // @ts-ignore
                    s7 = peg$parseor_operation();
                    // @ts-ignore
                    if (s7 !== peg$FAILED) {
                        // @ts-ignore
                        s5 = [s5, s6, s7];
                        // @ts-ignore
                        s4 = s5;
                        // @ts-ignore
                    }
                    else {
                        // @ts-ignore
                        peg$currPos = s4;
                        // @ts-ignore
                        s4 = peg$FAILED;
                    }
                    // @ts-ignore
                }
                else {
                    // @ts-ignore
                    peg$currPos = s4;
                    // @ts-ignore
                    s4 = peg$FAILED;
                }
                // @ts-ignore
                while (s4 !== peg$FAILED) {
                    // @ts-ignore
                    s3.push(s4);
                    // @ts-ignore
                    s4 = peg$currPos;
                    // @ts-ignore
                    if (input.substr(peg$currPos, 3) === peg$c18) {
                        // @ts-ignore
                        s5 = peg$c18;
                        // @ts-ignore
                        peg$currPos += 3;
                        // @ts-ignore
                    }
                    else {
                        // @ts-ignore
                        s5 = peg$FAILED;
                        // @ts-ignore
                        if (peg$silentFails === 0) {
                            peg$fail(peg$e18);
                        }
                    }
                    // @ts-ignore
                    if (s5 !== peg$FAILED) {
                        // @ts-ignore
                        s6 = peg$parseWS();
                        // @ts-ignore
                        s7 = peg$parseor_operation();
                        // @ts-ignore
                        if (s7 !== peg$FAILED) {
                            // @ts-ignore
                            s5 = [s5, s6, s7];
                            // @ts-ignore
                            s4 = s5;
                            // @ts-ignore
                        }
                        else {
                            // @ts-ignore
                            peg$currPos = s4;
                            // @ts-ignore
                            s4 = peg$FAILED;
                        }
                        // @ts-ignore
                    }
                    else {
                        // @ts-ignore
                        peg$currPos = s4;
                        // @ts-ignore
                        s4 = peg$FAILED;
                    }
                }
                // @ts-ignore
                peg$savedPos = s0;
                // @ts-ignore
                s0 = peg$f7(s1, s3);
                // @ts-ignore
            }
            else {
                // @ts-ignore
                peg$currPos = s0;
                // @ts-ignore
                s0 = peg$FAILED;
            }
            // @ts-ignore
            peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };
            // @ts-ignore
            return s0;
        }
        // @ts-ignore
        function peg$parseor_operation() {
            // @ts-ignore
            var s0, s1, s2, s3, s4, s5, s6, s7;
            // @ts-ignore
            var key = peg$currPos * 35 + 8;
            // @ts-ignore
            var cached = peg$resultsCache[key];
            // @ts-ignore
            if (cached) {
                // @ts-ignore
                peg$currPos = cached.nextPos;
                // @ts-ignore
                return cached.result;
            }
            // @ts-ignore
            s0 = peg$currPos;
            // @ts-ignore
            s1 = peg$parseimplies_operation();
            // @ts-ignore
            if (s1 !== peg$FAILED) {
                // @ts-ignore
                s2 = peg$parseWS();
                // @ts-ignore
                s3 = [];
                // @ts-ignore
                s4 = peg$currPos;
                // @ts-ignore
                if (input.substr(peg$currPos, 2) === peg$c19) {
                    // @ts-ignore
                    s5 = peg$c19;
                    // @ts-ignore
                    peg$currPos += 2;
                    // @ts-ignore
                }
                else {
                    // @ts-ignore
                    s5 = peg$FAILED;
                    // @ts-ignore
                    if (peg$silentFails === 0) {
                        peg$fail(peg$e19);
                    }
                }
                // @ts-ignore
                if (s5 === peg$FAILED) {
                    // @ts-ignore
                    if (input.substr(peg$currPos, 3) === peg$c20) {
                        // @ts-ignore
                        s5 = peg$c20;
                        // @ts-ignore
                        peg$currPos += 3;
                        // @ts-ignore
                    }
                    else {
                        // @ts-ignore
                        s5 = peg$FAILED;
                        // @ts-ignore
                        if (peg$silentFails === 0) {
                            peg$fail(peg$e20);
                        }
                    }
                }
                // @ts-ignore
                if (s5 !== peg$FAILED) {
                    // @ts-ignore
                    s6 = peg$parseWS();
                    // @ts-ignore
                    s7 = peg$parseimplies_operation();
                    // @ts-ignore
                    if (s7 !== peg$FAILED) {
                        // @ts-ignore
                        s5 = [s5, s6, s7];
                        // @ts-ignore
                        s4 = s5;
                        // @ts-ignore
                    }
                    else {
                        // @ts-ignore
                        peg$currPos = s4;
                        // @ts-ignore
                        s4 = peg$FAILED;
                    }
                    // @ts-ignore
                }
                else {
                    // @ts-ignore
                    peg$currPos = s4;
                    // @ts-ignore
                    s4 = peg$FAILED;
                }
                // @ts-ignore
                while (s4 !== peg$FAILED) {
                    // @ts-ignore
                    s3.push(s4);
                    // @ts-ignore
                    s4 = peg$currPos;
                    // @ts-ignore
                    if (input.substr(peg$currPos, 2) === peg$c19) {
                        // @ts-ignore
                        s5 = peg$c19;
                        // @ts-ignore
                        peg$currPos += 2;
                        // @ts-ignore
                    }
                    else {
                        // @ts-ignore
                        s5 = peg$FAILED;
                        // @ts-ignore
                        if (peg$silentFails === 0) {
                            peg$fail(peg$e19);
                        }
                    }
                    // @ts-ignore
                    if (s5 === peg$FAILED) {
                        // @ts-ignore
                        if (input.substr(peg$currPos, 3) === peg$c20) {
                            // @ts-ignore
                            s5 = peg$c20;
                            // @ts-ignore
                            peg$currPos += 3;
                            // @ts-ignore
                        }
                        else {
                            // @ts-ignore
                            s5 = peg$FAILED;
                            // @ts-ignore
                            if (peg$silentFails === 0) {
                                peg$fail(peg$e20);
                            }
                        }
                    }
                    // @ts-ignore
                    if (s5 !== peg$FAILED) {
                        // @ts-ignore
                        s6 = peg$parseWS();
                        // @ts-ignore
                        s7 = peg$parseimplies_operation();
                        // @ts-ignore
                        if (s7 !== peg$FAILED) {
                            // @ts-ignore
                            s5 = [s5, s6, s7];
                            // @ts-ignore
                            s4 = s5;
                            // @ts-ignore
                        }
                        else {
                            // @ts-ignore
                            peg$currPos = s4;
                            // @ts-ignore
                            s4 = peg$FAILED;
                        }
                        // @ts-ignore
                    }
                    else {
                        // @ts-ignore
                        peg$currPos = s4;
                        // @ts-ignore
                        s4 = peg$FAILED;
                    }
                }
                // @ts-ignore
                peg$savedPos = s0;
                // @ts-ignore
                s0 = peg$f8(s1, s3);
                // @ts-ignore
            }
            else {
                // @ts-ignore
                peg$currPos = s0;
                // @ts-ignore
                s0 = peg$FAILED;
            }
            // @ts-ignore
            peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };
            // @ts-ignore
            return s0;
        }
        // @ts-ignore
        function peg$parseimplies_operation() {
            // @ts-ignore
            var s0, s1, s2, s3, s4, s5, s6, s7;
            // @ts-ignore
            var key = peg$currPos * 35 + 9;
            // @ts-ignore
            var cached = peg$resultsCache[key];
            // @ts-ignore
            if (cached) {
                // @ts-ignore
                peg$currPos = cached.nextPos;
                // @ts-ignore
                return cached.result;
            }
            // @ts-ignore
            s0 = peg$currPos;
            // @ts-ignore
            s1 = peg$parsenon_op();
            // @ts-ignore
            if (s1 !== peg$FAILED) {
                // @ts-ignore
                s2 = peg$parseWS();
                // @ts-ignore
                s3 = [];
                // @ts-ignore
                s4 = peg$currPos;
                // @ts-ignore
                if (input.substr(peg$currPos, 7) === peg$c21) {
                    // @ts-ignore
                    s5 = peg$c21;
                    // @ts-ignore
                    peg$currPos += 7;
                    // @ts-ignore
                }
                else {
                    // @ts-ignore
                    s5 = peg$FAILED;
                    // @ts-ignore
                    if (peg$silentFails === 0) {
                        peg$fail(peg$e21);
                    }
                }
                // @ts-ignore
                if (s5 !== peg$FAILED) {
                    // @ts-ignore
                    s6 = peg$parseWS();
                    // @ts-ignore
                    s7 = peg$parsenon_op();
                    // @ts-ignore
                    if (s7 !== peg$FAILED) {
                        // @ts-ignore
                        s5 = [s5, s6, s7];
                        // @ts-ignore
                        s4 = s5;
                        // @ts-ignore
                    }
                    else {
                        // @ts-ignore
                        peg$currPos = s4;
                        // @ts-ignore
                        s4 = peg$FAILED;
                    }
                    // @ts-ignore
                }
                else {
                    // @ts-ignore
                    peg$currPos = s4;
                    // @ts-ignore
                    s4 = peg$FAILED;
                }
                // @ts-ignore
                while (s4 !== peg$FAILED) {
                    // @ts-ignore
                    s3.push(s4);
                    // @ts-ignore
                    s4 = peg$currPos;
                    // @ts-ignore
                    if (input.substr(peg$currPos, 7) === peg$c21) {
                        // @ts-ignore
                        s5 = peg$c21;
                        // @ts-ignore
                        peg$currPos += 7;
                        // @ts-ignore
                    }
                    else {
                        // @ts-ignore
                        s5 = peg$FAILED;
                        // @ts-ignore
                        if (peg$silentFails === 0) {
                            peg$fail(peg$e21);
                        }
                    }
                    // @ts-ignore
                    if (s5 !== peg$FAILED) {
                        // @ts-ignore
                        s6 = peg$parseWS();
                        // @ts-ignore
                        s7 = peg$parsenon_op();
                        // @ts-ignore
                        if (s7 !== peg$FAILED) {
                            // @ts-ignore
                            s5 = [s5, s6, s7];
                            // @ts-ignore
                            s4 = s5;
                            // @ts-ignore
                        }
                        else {
                            // @ts-ignore
                            peg$currPos = s4;
                            // @ts-ignore
                            s4 = peg$FAILED;
                        }
                        // @ts-ignore
                    }
                    else {
                        // @ts-ignore
                        peg$currPos = s4;
                        // @ts-ignore
                        s4 = peg$FAILED;
                    }
                }
                // @ts-ignore
                peg$savedPos = s0;
                // @ts-ignore
                s0 = peg$f9(s1, s3);
                // @ts-ignore
            }
            else {
                // @ts-ignore
                peg$currPos = s0;
                // @ts-ignore
                s0 = peg$FAILED;
            }
            // @ts-ignore
            peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };
            // @ts-ignore
            return s0;
        }
        // @ts-ignore
        function peg$parseexpression_inner() {
            // @ts-ignore
            var s0;
            // @ts-ignore
            var key = peg$currPos * 35 + 10;
            // @ts-ignore
            var cached = peg$resultsCache[key];
            // @ts-ignore
            if (cached) {
                // @ts-ignore
                peg$currPos = cached.nextPos;
                // @ts-ignore
                return cached.result;
            }
            // @ts-ignore
            s0 = peg$parseinvocation_expression();
            // @ts-ignore
            if (s0 === peg$FAILED) {
                // @ts-ignore
                s0 = peg$parseindexed_expression();
            }
            // @ts-ignore
            peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };
            // @ts-ignore
            return s0;
        }
        // @ts-ignore
        function peg$parseinvocation_expression() {
            // @ts-ignore
            var s0, s1, s2, s3;
            // @ts-ignore
            var key = peg$currPos * 35 + 11;
            // @ts-ignore
            var cached = peg$resultsCache[key];
            // @ts-ignore
            if (cached) {
                // @ts-ignore
                peg$currPos = cached.nextPos;
                // @ts-ignore
                return cached.result;
            }
            // @ts-ignore
            s0 = peg$currPos;
            // @ts-ignore
            if (input.charCodeAt(peg$currPos) === 46) {
                // @ts-ignore
                s1 = peg$c22;
                // @ts-ignore
                peg$currPos++;
                // @ts-ignore
            }
            else {
                // @ts-ignore
                s1 = peg$FAILED;
                // @ts-ignore
                if (peg$silentFails === 0) {
                    peg$fail(peg$e22);
                }
            }
            // @ts-ignore
            if (s1 !== peg$FAILED) {
                // @ts-ignore
                s2 = peg$parseinvocation();
                // @ts-ignore
                if (s2 !== peg$FAILED) {
                    // @ts-ignore
                    s3 = peg$parseexpression_inner();
                    // @ts-ignore
                    if (s3 === peg$FAILED) {
                        // @ts-ignore
                        s3 = null;
                    }
                    // @ts-ignore
                    peg$savedPos = s0;
                    // @ts-ignore
                    s0 = peg$f10(s2, s3);
                    // @ts-ignore
                }
                else {
                    // @ts-ignore
                    peg$currPos = s0;
                    // @ts-ignore
                    s0 = peg$FAILED;
                }
                // @ts-ignore
            }
            else {
                // @ts-ignore
                peg$currPos = s0;
                // @ts-ignore
                s0 = peg$FAILED;
            }
            // @ts-ignore
            peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };
            // @ts-ignore
            return s0;
        }
        // @ts-ignore
        function peg$parseindexed_expression() {
            // @ts-ignore
            var s0, s1, s2, s3, s4;
            // @ts-ignore
            var key = peg$currPos * 35 + 12;
            // @ts-ignore
            var cached = peg$resultsCache[key];
            // @ts-ignore
            if (cached) {
                // @ts-ignore
                peg$currPos = cached.nextPos;
                // @ts-ignore
                return cached.result;
            }
            // @ts-ignore
            s0 = peg$currPos;
            // @ts-ignore
            if (input.charCodeAt(peg$currPos) === 91) {
                // @ts-ignore
                s1 = peg$c23;
                // @ts-ignore
                peg$currPos++;
                // @ts-ignore
            }
            else {
                // @ts-ignore
                s1 = peg$FAILED;
                // @ts-ignore
                if (peg$silentFails === 0) {
                    peg$fail(peg$e23);
                }
            }
            // @ts-ignore
            if (s1 !== peg$FAILED) {
                // @ts-ignore
                s2 = peg$parseexpression();
                // @ts-ignore
                if (s2 !== peg$FAILED) {
                    // @ts-ignore
                    if (input.charCodeAt(peg$currPos) === 93) {
                        // @ts-ignore
                        s3 = peg$c24;
                        // @ts-ignore
                        peg$currPos++;
                        // @ts-ignore
                    }
                    else {
                        // @ts-ignore
                        s3 = peg$FAILED;
                        // @ts-ignore
                        if (peg$silentFails === 0) {
                            peg$fail(peg$e24);
                        }
                    }
                    // @ts-ignore
                    if (s3 !== peg$FAILED) {
                        // @ts-ignore
                        s4 = peg$parseexpression_inner();
                        // @ts-ignore
                        if (s4 === peg$FAILED) {
                            // @ts-ignore
                            s4 = null;
                        }
                        // @ts-ignore
                        peg$savedPos = s0;
                        // @ts-ignore
                        s0 = peg$f11(s2, s4);
                        // @ts-ignore
                    }
                    else {
                        // @ts-ignore
                        peg$currPos = s0;
                        // @ts-ignore
                        s0 = peg$FAILED;
                    }
                    // @ts-ignore
                }
                else {
                    // @ts-ignore
                    peg$currPos = s0;
                    // @ts-ignore
                    s0 = peg$FAILED;
                }
                // @ts-ignore
            }
            else {
                // @ts-ignore
                peg$currPos = s0;
                // @ts-ignore
                s0 = peg$FAILED;
            }
            // @ts-ignore
            peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };
            // @ts-ignore
            return s0;
        }
        // @ts-ignore
        function peg$parseterm() {
            // @ts-ignore
            var s0, s1, s2, s3;
            // @ts-ignore
            var key = peg$currPos * 35 + 13;
            // @ts-ignore
            var cached = peg$resultsCache[key];
            // @ts-ignore
            if (cached) {
                // @ts-ignore
                peg$currPos = cached.nextPos;
                // @ts-ignore
                return cached.result;
            }
            // @ts-ignore
            s0 = peg$parseinvocation();
            // @ts-ignore
            if (s0 === peg$FAILED) {
                // @ts-ignore
                s0 = peg$parseliteral();
                // @ts-ignore
                if (s0 === peg$FAILED) {
                    // @ts-ignore
                    s0 = peg$parseexternalConstant();
                    // @ts-ignore
                    if (s0 === peg$FAILED) {
                        // @ts-ignore
                        s0 = peg$currPos;
                        // @ts-ignore
                        if (input.charCodeAt(peg$currPos) === 40) {
                            // @ts-ignore
                            s1 = peg$c25;
                            // @ts-ignore
                            peg$currPos++;
                            // @ts-ignore
                        }
                        else {
                            // @ts-ignore
                            s1 = peg$FAILED;
                            // @ts-ignore
                            if (peg$silentFails === 0) {
                                peg$fail(peg$e25);
                            }
                        }
                        // @ts-ignore
                        if (s1 !== peg$FAILED) {
                            // @ts-ignore
                            s2 = peg$parseexpression();
                            // @ts-ignore
                            if (s2 !== peg$FAILED) {
                                // @ts-ignore
                                if (input.charCodeAt(peg$currPos) === 41) {
                                    // @ts-ignore
                                    s3 = peg$c26;
                                    // @ts-ignore
                                    peg$currPos++;
                                    // @ts-ignore
                                }
                                else {
                                    // @ts-ignore
                                    s3 = peg$FAILED;
                                    // @ts-ignore
                                    if (peg$silentFails === 0) {
                                        peg$fail(peg$e26);
                                    }
                                }
                                // @ts-ignore
                                if (s3 !== peg$FAILED) {
                                    // @ts-ignore
                                    peg$savedPos = s0;
                                    // @ts-ignore
                                    s0 = peg$f12(s2);
                                    // @ts-ignore
                                }
                                else {
                                    // @ts-ignore
                                    peg$currPos = s0;
                                    // @ts-ignore
                                    s0 = peg$FAILED;
                                }
                                // @ts-ignore
                            }
                            else {
                                // @ts-ignore
                                peg$currPos = s0;
                                // @ts-ignore
                                s0 = peg$FAILED;
                            }
                            // @ts-ignore
                        }
                        else {
                            // @ts-ignore
                            peg$currPos = s0;
                            // @ts-ignore
                            s0 = peg$FAILED;
                        }
                    }
                }
            }
            // @ts-ignore
            peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };
            // @ts-ignore
            return s0;
        }
        // @ts-ignore
        function peg$parseliteral() {
            // @ts-ignore
            var s0, s1, s2, s3;
            // @ts-ignore
            var key = peg$currPos * 35 + 14;
            // @ts-ignore
            var cached = peg$resultsCache[key];
            // @ts-ignore
            if (cached) {
                // @ts-ignore
                peg$currPos = cached.nextPos;
                // @ts-ignore
                return cached.result;
            }
            // @ts-ignore
            s0 = peg$currPos;
            // @ts-ignore
            s1 = peg$currPos;
            // @ts-ignore
            if (input.charCodeAt(peg$currPos) === 123) {
                // @ts-ignore
                s2 = peg$c27;
                // @ts-ignore
                peg$currPos++;
                // @ts-ignore
            }
            else {
                // @ts-ignore
                s2 = peg$FAILED;
                // @ts-ignore
                if (peg$silentFails === 0) {
                    peg$fail(peg$e27);
                }
            }
            // @ts-ignore
            if (s2 !== peg$FAILED) {
                // @ts-ignore
                if (input.charCodeAt(peg$currPos) === 125) {
                    // @ts-ignore
                    s3 = peg$c28;
                    // @ts-ignore
                    peg$currPos++;
                    // @ts-ignore
                }
                else {
                    // @ts-ignore
                    s3 = peg$FAILED;
                    // @ts-ignore
                    if (peg$silentFails === 0) {
                        peg$fail(peg$e28);
                    }
                }
                // @ts-ignore
                if (s3 !== peg$FAILED) {
                    // @ts-ignore
                    peg$savedPos = s1;
                    // @ts-ignore
                    s1 = peg$f13();
                    // @ts-ignore
                }
                else {
                    // @ts-ignore
                    peg$currPos = s1;
                    // @ts-ignore
                    s1 = peg$FAILED;
                }
                // @ts-ignore
            }
            else {
                // @ts-ignore
                peg$currPos = s1;
                // @ts-ignore
                s1 = peg$FAILED;
            }
            // @ts-ignore
            if (s1 === peg$FAILED) {
                // @ts-ignore
                s1 = peg$currPos;
                // @ts-ignore
                s2 = peg$currPos;
                // @ts-ignore
                if (input.substr(peg$currPos, 4) === peg$c29) {
                    // @ts-ignore
                    s3 = peg$c29;
                    // @ts-ignore
                    peg$currPos += 4;
                    // @ts-ignore
                }
                else {
                    // @ts-ignore
                    s3 = peg$FAILED;
                    // @ts-ignore
                    if (peg$silentFails === 0) {
                        peg$fail(peg$e29);
                    }
                }
                // @ts-ignore
                if (s3 === peg$FAILED) {
                    // @ts-ignore
                    if (input.substr(peg$currPos, 5) === peg$c30) {
                        // @ts-ignore
                        s3 = peg$c30;
                        // @ts-ignore
                        peg$currPos += 5;
                        // @ts-ignore
                    }
                    else {
                        // @ts-ignore
                        s3 = peg$FAILED;
                        // @ts-ignore
                        if (peg$silentFails === 0) {
                            peg$fail(peg$e30);
                        }
                    }
                }
                // @ts-ignore
                if (s3 !== peg$FAILED) {
                    // @ts-ignore
                    s2 = input.substring(s2, peg$currPos);
                    // @ts-ignore
                }
                else {
                    // @ts-ignore
                    s2 = s3;
                }
                // @ts-ignore
                if (s2 !== peg$FAILED) {
                    // @ts-ignore
                    peg$savedPos = s1;
                    // @ts-ignore
                    s2 = peg$f14(s2);
                }
                // @ts-ignore
                s1 = s2;
                // @ts-ignore
                if (s1 === peg$FAILED) {
                    // @ts-ignore
                    s1 = peg$parseSTRING();
                    // @ts-ignore
                    if (s1 === peg$FAILED) {
                        // @ts-ignore
                        s1 = peg$currPos;
                        // @ts-ignore
                        s2 = peg$parseNUMBER();
                        // @ts-ignore
                        if (s2 !== peg$FAILED) {
                            // @ts-ignore
                            peg$savedPos = s1;
                            // @ts-ignore
                            s2 = peg$f15(s2);
                        }
                        // @ts-ignore
                        s1 = s2;
                        // @ts-ignore
                        if (s1 === peg$FAILED) {
                            // @ts-ignore
                            s1 = peg$parseDATETIME();
                            // @ts-ignore
                            if (s1 === peg$FAILED) {
                                // @ts-ignore
                                s1 = peg$parseDATE();
                                // @ts-ignore
                                if (s1 === peg$FAILED) {
                                    // @ts-ignore
                                    s1 = peg$parseTIME();
                                    // @ts-ignore
                                    if (s1 === peg$FAILED) {
                                        // @ts-ignore
                                        s1 = peg$parsequantity();
                                    }
                                }
                            }
                        }
                    }
                }
            }
            // @ts-ignore
            if (s1 !== peg$FAILED) {
                // @ts-ignore
                peg$savedPos = s0;
                // @ts-ignore
                s1 = peg$f16(s1);
            }
            // @ts-ignore
            s0 = s1;
            // @ts-ignore
            peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };
            // @ts-ignore
            return s0;
        }
        // @ts-ignore
        function peg$parseNUMBER() {
            // @ts-ignore
            var s0, s1, s2, s3, s4, s5, s6;
            // @ts-ignore
            var key = peg$currPos * 35 + 15;
            // @ts-ignore
            var cached = peg$resultsCache[key];
            // @ts-ignore
            if (cached) {
                // @ts-ignore
                peg$currPos = cached.nextPos;
                // @ts-ignore
                return cached.result;
            }
            // @ts-ignore
            s0 = peg$currPos;
            // @ts-ignore
            s1 = peg$currPos;
            // @ts-ignore
            s2 = [];
            // @ts-ignore
            if (peg$r0.test(input.charAt(peg$currPos))) {
                // @ts-ignore
                s3 = input.charAt(peg$currPos);
                // @ts-ignore
                peg$currPos++;
                // @ts-ignore
            }
            else {
                // @ts-ignore
                s3 = peg$FAILED;
                // @ts-ignore
                if (peg$silentFails === 0) {
                    peg$fail(peg$e31);
                }
            }
            // @ts-ignore
            if (s3 !== peg$FAILED) {
                // @ts-ignore
                while (s3 !== peg$FAILED) {
                    // @ts-ignore
                    s2.push(s3);
                    // @ts-ignore
                    if (peg$r0.test(input.charAt(peg$currPos))) {
                        // @ts-ignore
                        s3 = input.charAt(peg$currPos);
                        // @ts-ignore
                        peg$currPos++;
                        // @ts-ignore
                    }
                    else {
                        // @ts-ignore
                        s3 = peg$FAILED;
                        // @ts-ignore
                        if (peg$silentFails === 0) {
                            peg$fail(peg$e31);
                        }
                    }
                }
                // @ts-ignore
            }
            else {
                // @ts-ignore
                s2 = peg$FAILED;
            }
            // @ts-ignore
            if (s2 !== peg$FAILED) {
                // @ts-ignore
                s3 = peg$currPos;
                // @ts-ignore
                if (input.charCodeAt(peg$currPos) === 46) {
                    // @ts-ignore
                    s4 = peg$c22;
                    // @ts-ignore
                    peg$currPos++;
                    // @ts-ignore
                }
                else {
                    // @ts-ignore
                    s4 = peg$FAILED;
                    // @ts-ignore
                    if (peg$silentFails === 0) {
                        peg$fail(peg$e22);
                    }
                }
                // @ts-ignore
                if (s4 !== peg$FAILED) {
                    // @ts-ignore
                    s5 = [];
                    // @ts-ignore
                    if (peg$r0.test(input.charAt(peg$currPos))) {
                        // @ts-ignore
                        s6 = input.charAt(peg$currPos);
                        // @ts-ignore
                        peg$currPos++;
                        // @ts-ignore
                    }
                    else {
                        // @ts-ignore
                        s6 = peg$FAILED;
                        // @ts-ignore
                        if (peg$silentFails === 0) {
                            peg$fail(peg$e31);
                        }
                    }
                    // @ts-ignore
                    if (s6 !== peg$FAILED) {
                        // @ts-ignore
                        while (s6 !== peg$FAILED) {
                            // @ts-ignore
                            s5.push(s6);
                            // @ts-ignore
                            if (peg$r0.test(input.charAt(peg$currPos))) {
                                // @ts-ignore
                                s6 = input.charAt(peg$currPos);
                                // @ts-ignore
                                peg$currPos++;
                                // @ts-ignore
                            }
                            else {
                                // @ts-ignore
                                s6 = peg$FAILED;
                                // @ts-ignore
                                if (peg$silentFails === 0) {
                                    peg$fail(peg$e31);
                                }
                            }
                        }
                        // @ts-ignore
                    }
                    else {
                        // @ts-ignore
                        s5 = peg$FAILED;
                    }
                    // @ts-ignore
                    if (s5 !== peg$FAILED) {
                        // @ts-ignore
                        s4 = [s4, s5];
                        // @ts-ignore
                        s3 = s4;
                        // @ts-ignore
                    }
                    else {
                        // @ts-ignore
                        peg$currPos = s3;
                        // @ts-ignore
                        s3 = peg$FAILED;
                    }
                    // @ts-ignore
                }
                else {
                    // @ts-ignore
                    peg$currPos = s3;
                    // @ts-ignore
                    s3 = peg$FAILED;
                }
                // @ts-ignore
                if (s3 === peg$FAILED) {
                    // @ts-ignore
                    s3 = null;
                }
                // @ts-ignore
                s2 = [s2, s3];
                // @ts-ignore
                s1 = s2;
                // @ts-ignore
            }
            else {
                // @ts-ignore
                peg$currPos = s1;
                // @ts-ignore
                s1 = peg$FAILED;
            }
            // @ts-ignore
            if (s1 !== peg$FAILED) {
                // @ts-ignore
                s0 = input.substring(s0, peg$currPos);
                // @ts-ignore
            }
            else {
                // @ts-ignore
                s0 = s1;
            }
            // @ts-ignore
            peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };
            // @ts-ignore
            return s0;
        }
        // @ts-ignore
        function peg$parseexternalConstant() {
            // @ts-ignore
            var s0, s1, s2;
            // @ts-ignore
            var key = peg$currPos * 35 + 16;
            // @ts-ignore
            var cached = peg$resultsCache[key];
            // @ts-ignore
            if (cached) {
                // @ts-ignore
                peg$currPos = cached.nextPos;
                // @ts-ignore
                return cached.result;
            }
            // @ts-ignore
            s0 = peg$currPos;
            // @ts-ignore
            if (input.charCodeAt(peg$currPos) === 37) {
                // @ts-ignore
                s1 = peg$c31;
                // @ts-ignore
                peg$currPos++;
                // @ts-ignore
            }
            else {
                // @ts-ignore
                s1 = peg$FAILED;
                // @ts-ignore
                if (peg$silentFails === 0) {
                    peg$fail(peg$e32);
                }
            }
            // @ts-ignore
            if (s1 !== peg$FAILED) {
                // @ts-ignore
                s2 = peg$parseidentifier();
                // @ts-ignore
                if (s2 === peg$FAILED) {
                    // @ts-ignore
                    s2 = peg$parseSTRING();
                }
                // @ts-ignore
                if (s2 !== peg$FAILED) {
                    // @ts-ignore
                    peg$savedPos = s0;
                    // @ts-ignore
                    s0 = peg$f17(s2);
                    // @ts-ignore
                }
                else {
                    // @ts-ignore
                    peg$currPos = s0;
                    // @ts-ignore
                    s0 = peg$FAILED;
                }
                // @ts-ignore
            }
            else {
                // @ts-ignore
                peg$currPos = s0;
                // @ts-ignore
                s0 = peg$FAILED;
            }
            // @ts-ignore
            peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };
            // @ts-ignore
            return s0;
        }
        // @ts-ignore
        function peg$parseinvocation() {
            // @ts-ignore
            var s0, s1;
            // @ts-ignore
            var key = peg$currPos * 35 + 17;
            // @ts-ignore
            var cached = peg$resultsCache[key];
            // @ts-ignore
            if (cached) {
                // @ts-ignore
                peg$currPos = cached.nextPos;
                // @ts-ignore
                return cached.result;
            }
            // @ts-ignore
            s0 = peg$parsefunction();
            // @ts-ignore
            if (s0 === peg$FAILED) {
                // @ts-ignore
                s0 = peg$parseidentifier();
                // @ts-ignore
                if (s0 === peg$FAILED) {
                    // @ts-ignore
                    s0 = peg$currPos;
                    // @ts-ignore
                    if (input.substr(peg$currPos, 5) === peg$c32) {
                        // @ts-ignore
                        s1 = peg$c32;
                        // @ts-ignore
                        peg$currPos += 5;
                        // @ts-ignore
                    }
                    else {
                        // @ts-ignore
                        s1 = peg$FAILED;
                        // @ts-ignore
                        if (peg$silentFails === 0) {
                            peg$fail(peg$e33);
                        }
                    }
                    // @ts-ignore
                    if (s1 !== peg$FAILED) {
                        // @ts-ignore
                        peg$savedPos = s0;
                        // @ts-ignore
                        s1 = peg$f18();
                    }
                    // @ts-ignore
                    s0 = s1;
                    // @ts-ignore
                    if (s0 === peg$FAILED) {
                        // @ts-ignore
                        s0 = peg$currPos;
                        // @ts-ignore
                        if (input.substr(peg$currPos, 6) === peg$c33) {
                            // @ts-ignore
                            s1 = peg$c33;
                            // @ts-ignore
                            peg$currPos += 6;
                            // @ts-ignore
                        }
                        else {
                            // @ts-ignore
                            s1 = peg$FAILED;
                            // @ts-ignore
                            if (peg$silentFails === 0) {
                                peg$fail(peg$e34);
                            }
                        }
                        // @ts-ignore
                        if (s1 !== peg$FAILED) {
                            // @ts-ignore
                            peg$savedPos = s0;
                            // @ts-ignore
                            s1 = peg$f19();
                        }
                        // @ts-ignore
                        s0 = s1;
                        // @ts-ignore
                        if (s0 === peg$FAILED) {
                            // @ts-ignore
                            s0 = peg$currPos;
                            // @ts-ignore
                            if (input.substr(peg$currPos, 6) === peg$c34) {
                                // @ts-ignore
                                s1 = peg$c34;
                                // @ts-ignore
                                peg$currPos += 6;
                                // @ts-ignore
                            }
                            else {
                                // @ts-ignore
                                s1 = peg$FAILED;
                                // @ts-ignore
                                if (peg$silentFails === 0) {
                                    peg$fail(peg$e35);
                                }
                            }
                            // @ts-ignore
                            if (s1 !== peg$FAILED) {
                                // @ts-ignore
                                peg$savedPos = s0;
                                // @ts-ignore
                                s1 = peg$f20();
                            }
                            // @ts-ignore
                            s0 = s1;
                        }
                    }
                }
            }
            // @ts-ignore
            peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };
            // @ts-ignore
            return s0;
        }
        // @ts-ignore
        function peg$parsefunction() {
            // @ts-ignore
            var s0, s1, s2, s3, s4;
            // @ts-ignore
            var key = peg$currPos * 35 + 18;
            // @ts-ignore
            var cached = peg$resultsCache[key];
            // @ts-ignore
            if (cached) {
                // @ts-ignore
                peg$currPos = cached.nextPos;
                // @ts-ignore
                return cached.result;
            }
            // @ts-ignore
            s0 = peg$currPos;
            // @ts-ignore
            s1 = peg$parseidentifier();
            // @ts-ignore
            if (s1 !== peg$FAILED) {
                // @ts-ignore
                if (input.charCodeAt(peg$currPos) === 40) {
                    // @ts-ignore
                    s2 = peg$c25;
                    // @ts-ignore
                    peg$currPos++;
                    // @ts-ignore
                }
                else {
                    // @ts-ignore
                    s2 = peg$FAILED;
                    // @ts-ignore
                    if (peg$silentFails === 0) {
                        peg$fail(peg$e25);
                    }
                }
                // @ts-ignore
                if (s2 !== peg$FAILED) {
                    // @ts-ignore
                    s3 = peg$parseparamList();
                    // @ts-ignore
                    if (s3 === peg$FAILED) {
                        // @ts-ignore
                        s3 = null;
                    }
                    // @ts-ignore
                    if (input.charCodeAt(peg$currPos) === 41) {
                        // @ts-ignore
                        s4 = peg$c26;
                        // @ts-ignore
                        peg$currPos++;
                        // @ts-ignore
                    }
                    else {
                        // @ts-ignore
                        s4 = peg$FAILED;
                        // @ts-ignore
                        if (peg$silentFails === 0) {
                            peg$fail(peg$e26);
                        }
                    }
                    // @ts-ignore
                    if (s4 !== peg$FAILED) {
                        // @ts-ignore
                        peg$savedPos = s0;
                        // @ts-ignore
                        s0 = peg$f21(s1, s3);
                        // @ts-ignore
                    }
                    else {
                        // @ts-ignore
                        peg$currPos = s0;
                        // @ts-ignore
                        s0 = peg$FAILED;
                    }
                    // @ts-ignore
                }
                else {
                    // @ts-ignore
                    peg$currPos = s0;
                    // @ts-ignore
                    s0 = peg$FAILED;
                }
                // @ts-ignore
            }
            else {
                // @ts-ignore
                peg$currPos = s0;
                // @ts-ignore
                s0 = peg$FAILED;
            }
            // @ts-ignore
            peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };
            // @ts-ignore
            return s0;
        }
        // @ts-ignore
        function peg$parseparamList() {
            // @ts-ignore
            var s0, s1, s2, s3, s4, s5, s6, s7, s8;
            // @ts-ignore
            var key = peg$currPos * 35 + 19;
            // @ts-ignore
            var cached = peg$resultsCache[key];
            // @ts-ignore
            if (cached) {
                // @ts-ignore
                peg$currPos = cached.nextPos;
                // @ts-ignore
                return cached.result;
            }
            // @ts-ignore
            s0 = peg$currPos;
            // @ts-ignore
            s1 = peg$parseWS();
            // @ts-ignore
            s2 = peg$parseexpression();
            // @ts-ignore
            if (s2 !== peg$FAILED) {
                // @ts-ignore
                s3 = peg$parseWS();
                // @ts-ignore
                s4 = [];
                // @ts-ignore
                s5 = peg$currPos;
                // @ts-ignore
                if (input.charCodeAt(peg$currPos) === 44) {
                    // @ts-ignore
                    s6 = peg$c35;
                    // @ts-ignore
                    peg$currPos++;
                    // @ts-ignore
                }
                else {
                    // @ts-ignore
                    s6 = peg$FAILED;
                    // @ts-ignore
                    if (peg$silentFails === 0) {
                        peg$fail(peg$e36);
                    }
                }
                // @ts-ignore
                if (s6 !== peg$FAILED) {
                    // @ts-ignore
                    s7 = peg$parseWS();
                    // @ts-ignore
                    s8 = peg$parseexpression();
                    // @ts-ignore
                    if (s8 !== peg$FAILED) {
                        // @ts-ignore
                        s6 = [s6, s7, s8];
                        // @ts-ignore
                        s5 = s6;
                        // @ts-ignore
                    }
                    else {
                        // @ts-ignore
                        peg$currPos = s5;
                        // @ts-ignore
                        s5 = peg$FAILED;
                    }
                    // @ts-ignore
                }
                else {
                    // @ts-ignore
                    peg$currPos = s5;
                    // @ts-ignore
                    s5 = peg$FAILED;
                }
                // @ts-ignore
                while (s5 !== peg$FAILED) {
                    // @ts-ignore
                    s4.push(s5);
                    // @ts-ignore
                    s5 = peg$currPos;
                    // @ts-ignore
                    if (input.charCodeAt(peg$currPos) === 44) {
                        // @ts-ignore
                        s6 = peg$c35;
                        // @ts-ignore
                        peg$currPos++;
                        // @ts-ignore
                    }
                    else {
                        // @ts-ignore
                        s6 = peg$FAILED;
                        // @ts-ignore
                        if (peg$silentFails === 0) {
                            peg$fail(peg$e36);
                        }
                    }
                    // @ts-ignore
                    if (s6 !== peg$FAILED) {
                        // @ts-ignore
                        s7 = peg$parseWS();
                        // @ts-ignore
                        s8 = peg$parseexpression();
                        // @ts-ignore
                        if (s8 !== peg$FAILED) {
                            // @ts-ignore
                            s6 = [s6, s7, s8];
                            // @ts-ignore
                            s5 = s6;
                            // @ts-ignore
                        }
                        else {
                            // @ts-ignore
                            peg$currPos = s5;
                            // @ts-ignore
                            s5 = peg$FAILED;
                        }
                        // @ts-ignore
                    }
                    else {
                        // @ts-ignore
                        peg$currPos = s5;
                        // @ts-ignore
                        s5 = peg$FAILED;
                    }
                }
                // @ts-ignore
                peg$savedPos = s0;
                // @ts-ignore
                s0 = peg$f22(s2, s4);
                // @ts-ignore
            }
            else {
                // @ts-ignore
                peg$currPos = s0;
                // @ts-ignore
                s0 = peg$FAILED;
            }
            // @ts-ignore
            peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };
            // @ts-ignore
            return s0;
        }
        // @ts-ignore
        function peg$parsequantity() {
            // @ts-ignore
            var s0, s1, s2, s3;
            // @ts-ignore
            var key = peg$currPos * 35 + 20;
            // @ts-ignore
            var cached = peg$resultsCache[key];
            // @ts-ignore
            if (cached) {
                // @ts-ignore
                peg$currPos = cached.nextPos;
                // @ts-ignore
                return cached.result;
            }
            // @ts-ignore
            s0 = peg$currPos;
            // @ts-ignore
            s1 = peg$parseNUMBER();
            // @ts-ignore
            if (s1 !== peg$FAILED) {
                // @ts-ignore
                s2 = peg$parseWS();
                // @ts-ignore
                s3 = peg$parseunit();
                // @ts-ignore
                if (s3 === peg$FAILED) {
                    // @ts-ignore
                    s3 = null;
                }
                // @ts-ignore
                peg$savedPos = s0;
                // @ts-ignore
                s0 = peg$f23(s1, s3);
                // @ts-ignore
            }
            else {
                // @ts-ignore
                peg$currPos = s0;
                // @ts-ignore
                s0 = peg$FAILED;
            }
            // @ts-ignore
            peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };
            // @ts-ignore
            return s0;
        }
        // @ts-ignore
        function peg$parseunit() {
            // @ts-ignore
            var s0;
            // @ts-ignore
            var key = peg$currPos * 35 + 21;
            // @ts-ignore
            var cached = peg$resultsCache[key];
            // @ts-ignore
            if (cached) {
                // @ts-ignore
                peg$currPos = cached.nextPos;
                // @ts-ignore
                return cached.result;
            }
            // @ts-ignore
            s0 = peg$parsedateTimePrecision();
            // @ts-ignore
            if (s0 === peg$FAILED) {
                // @ts-ignore
                s0 = peg$parsepluralDateTimePrecision();
                // @ts-ignore
                if (s0 === peg$FAILED) {
                    // @ts-ignore
                    s0 = peg$parseSTRING();
                }
            }
            // @ts-ignore
            peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };
            // @ts-ignore
            return s0;
        }
        // @ts-ignore
        function peg$parsedateTimePrecision() {
            // @ts-ignore
            var s0, s1;
            // @ts-ignore
            var key = peg$currPos * 35 + 22;
            // @ts-ignore
            var cached = peg$resultsCache[key];
            // @ts-ignore
            if (cached) {
                // @ts-ignore
                peg$currPos = cached.nextPos;
                // @ts-ignore
                return cached.result;
            }
            // @ts-ignore
            s0 = peg$currPos;
            // @ts-ignore
            if (input.substr(peg$currPos, 4) === peg$c36) {
                // @ts-ignore
                s1 = peg$c36;
                // @ts-ignore
                peg$currPos += 4;
                // @ts-ignore
            }
            else {
                // @ts-ignore
                s1 = peg$FAILED;
                // @ts-ignore
                if (peg$silentFails === 0) {
                    peg$fail(peg$e37);
                }
            }
            // @ts-ignore
            if (s1 === peg$FAILED) {
                // @ts-ignore
                if (input.substr(peg$currPos, 5) === peg$c37) {
                    // @ts-ignore
                    s1 = peg$c37;
                    // @ts-ignore
                    peg$currPos += 5;
                    // @ts-ignore
                }
                else {
                    // @ts-ignore
                    s1 = peg$FAILED;
                    // @ts-ignore
                    if (peg$silentFails === 0) {
                        peg$fail(peg$e38);
                    }
                }
                // @ts-ignore
                if (s1 === peg$FAILED) {
                    // @ts-ignore
                    if (input.substr(peg$currPos, 4) === peg$c38) {
                        // @ts-ignore
                        s1 = peg$c38;
                        // @ts-ignore
                        peg$currPos += 4;
                        // @ts-ignore
                    }
                    else {
                        // @ts-ignore
                        s1 = peg$FAILED;
                        // @ts-ignore
                        if (peg$silentFails === 0) {
                            peg$fail(peg$e39);
                        }
                    }
                    // @ts-ignore
                    if (s1 === peg$FAILED) {
                        // @ts-ignore
                        if (input.substr(peg$currPos, 3) === peg$c39) {
                            // @ts-ignore
                            s1 = peg$c39;
                            // @ts-ignore
                            peg$currPos += 3;
                            // @ts-ignore
                        }
                        else {
                            // @ts-ignore
                            s1 = peg$FAILED;
                            // @ts-ignore
                            if (peg$silentFails === 0) {
                                peg$fail(peg$e40);
                            }
                        }
                        // @ts-ignore
                        if (s1 === peg$FAILED) {
                            // @ts-ignore
                            if (input.substr(peg$currPos, 4) === peg$c40) {
                                // @ts-ignore
                                s1 = peg$c40;
                                // @ts-ignore
                                peg$currPos += 4;
                                // @ts-ignore
                            }
                            else {
                                // @ts-ignore
                                s1 = peg$FAILED;
                                // @ts-ignore
                                if (peg$silentFails === 0) {
                                    peg$fail(peg$e41);
                                }
                            }
                            // @ts-ignore
                            if (s1 === peg$FAILED) {
                                // @ts-ignore
                                if (input.substr(peg$currPos, 6) === peg$c41) {
                                    // @ts-ignore
                                    s1 = peg$c41;
                                    // @ts-ignore
                                    peg$currPos += 6;
                                    // @ts-ignore
                                }
                                else {
                                    // @ts-ignore
                                    s1 = peg$FAILED;
                                    // @ts-ignore
                                    if (peg$silentFails === 0) {
                                        peg$fail(peg$e42);
                                    }
                                }
                                // @ts-ignore
                                if (s1 === peg$FAILED) {
                                    // @ts-ignore
                                    if (input.substr(peg$currPos, 6) === peg$c42) {
                                        // @ts-ignore
                                        s1 = peg$c42;
                                        // @ts-ignore
                                        peg$currPos += 6;
                                        // @ts-ignore
                                    }
                                    else {
                                        // @ts-ignore
                                        s1 = peg$FAILED;
                                        // @ts-ignore
                                        if (peg$silentFails === 0) {
                                            peg$fail(peg$e43);
                                        }
                                    }
                                    // @ts-ignore
                                    if (s1 === peg$FAILED) {
                                        // @ts-ignore
                                        if (input.substr(peg$currPos, 11) === peg$c43) {
                                            // @ts-ignore
                                            s1 = peg$c43;
                                            // @ts-ignore
                                            peg$currPos += 11;
                                            // @ts-ignore
                                        }
                                        else {
                                            // @ts-ignore
                                            s1 = peg$FAILED;
                                            // @ts-ignore
                                            if (peg$silentFails === 0) {
                                                peg$fail(peg$e44);
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
            // @ts-ignore
            if (s1 !== peg$FAILED) {
                // @ts-ignore
                s0 = input.substring(s0, peg$currPos);
                // @ts-ignore
            }
            else {
                // @ts-ignore
                s0 = s1;
            }
            // @ts-ignore
            peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };
            // @ts-ignore
            return s0;
        }
        // @ts-ignore
        function peg$parsepluralDateTimePrecision() {
            // @ts-ignore
            var s0, s1;
            // @ts-ignore
            var key = peg$currPos * 35 + 23;
            // @ts-ignore
            var cached = peg$resultsCache[key];
            // @ts-ignore
            if (cached) {
                // @ts-ignore
                peg$currPos = cached.nextPos;
                // @ts-ignore
                return cached.result;
            }
            // @ts-ignore
            s0 = peg$currPos;
            // @ts-ignore
            if (input.substr(peg$currPos, 5) === peg$c44) {
                // @ts-ignore
                s1 = peg$c44;
                // @ts-ignore
                peg$currPos += 5;
                // @ts-ignore
            }
            else {
                // @ts-ignore
                s1 = peg$FAILED;
                // @ts-ignore
                if (peg$silentFails === 0) {
                    peg$fail(peg$e45);
                }
            }
            // @ts-ignore
            if (s1 === peg$FAILED) {
                // @ts-ignore
                if (input.substr(peg$currPos, 6) === peg$c45) {
                    // @ts-ignore
                    s1 = peg$c45;
                    // @ts-ignore
                    peg$currPos += 6;
                    // @ts-ignore
                }
                else {
                    // @ts-ignore
                    s1 = peg$FAILED;
                    // @ts-ignore
                    if (peg$silentFails === 0) {
                        peg$fail(peg$e46);
                    }
                }
                // @ts-ignore
                if (s1 === peg$FAILED) {
                    // @ts-ignore
                    if (input.substr(peg$currPos, 5) === peg$c46) {
                        // @ts-ignore
                        s1 = peg$c46;
                        // @ts-ignore
                        peg$currPos += 5;
                        // @ts-ignore
                    }
                    else {
                        // @ts-ignore
                        s1 = peg$FAILED;
                        // @ts-ignore
                        if (peg$silentFails === 0) {
                            peg$fail(peg$e47);
                        }
                    }
                    // @ts-ignore
                    if (s1 === peg$FAILED) {
                        // @ts-ignore
                        if (input.substr(peg$currPos, 4) === peg$c47) {
                            // @ts-ignore
                            s1 = peg$c47;
                            // @ts-ignore
                            peg$currPos += 4;
                            // @ts-ignore
                        }
                        else {
                            // @ts-ignore
                            s1 = peg$FAILED;
                            // @ts-ignore
                            if (peg$silentFails === 0) {
                                peg$fail(peg$e48);
                            }
                        }
                        // @ts-ignore
                        if (s1 === peg$FAILED) {
                            // @ts-ignore
                            if (input.substr(peg$currPos, 5) === peg$c48) {
                                // @ts-ignore
                                s1 = peg$c48;
                                // @ts-ignore
                                peg$currPos += 5;
                                // @ts-ignore
                            }
                            else {
                                // @ts-ignore
                                s1 = peg$FAILED;
                                // @ts-ignore
                                if (peg$silentFails === 0) {
                                    peg$fail(peg$e49);
                                }
                            }
                            // @ts-ignore
                            if (s1 === peg$FAILED) {
                                // @ts-ignore
                                if (input.substr(peg$currPos, 7) === peg$c49) {
                                    // @ts-ignore
                                    s1 = peg$c49;
                                    // @ts-ignore
                                    peg$currPos += 7;
                                    // @ts-ignore
                                }
                                else {
                                    // @ts-ignore
                                    s1 = peg$FAILED;
                                    // @ts-ignore
                                    if (peg$silentFails === 0) {
                                        peg$fail(peg$e50);
                                    }
                                }
                                // @ts-ignore
                                if (s1 === peg$FAILED) {
                                    // @ts-ignore
                                    if (input.substr(peg$currPos, 7) === peg$c50) {
                                        // @ts-ignore
                                        s1 = peg$c50;
                                        // @ts-ignore
                                        peg$currPos += 7;
                                        // @ts-ignore
                                    }
                                    else {
                                        // @ts-ignore
                                        s1 = peg$FAILED;
                                        // @ts-ignore
                                        if (peg$silentFails === 0) {
                                            peg$fail(peg$e51);
                                        }
                                    }
                                    // @ts-ignore
                                    if (s1 === peg$FAILED) {
                                        // @ts-ignore
                                        if (input.substr(peg$currPos, 12) === peg$c51) {
                                            // @ts-ignore
                                            s1 = peg$c51;
                                            // @ts-ignore
                                            peg$currPos += 12;
                                            // @ts-ignore
                                        }
                                        else {
                                            // @ts-ignore
                                            s1 = peg$FAILED;
                                            // @ts-ignore
                                            if (peg$silentFails === 0) {
                                                peg$fail(peg$e52);
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
            // @ts-ignore
            if (s1 !== peg$FAILED) {
                // @ts-ignore
                s0 = input.substring(s0, peg$currPos);
                // @ts-ignore
            }
            else {
                // @ts-ignore
                s0 = s1;
            }
            // @ts-ignore
            peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };
            // @ts-ignore
            return s0;
        }
        // @ts-ignore
        function peg$parseidentifier() {
            // @ts-ignore
            var s0, s1;
            // @ts-ignore
            var key = peg$currPos * 35 + 24;
            // @ts-ignore
            var cached = peg$resultsCache[key];
            // @ts-ignore
            if (cached) {
                // @ts-ignore
                peg$currPos = cached.nextPos;
                // @ts-ignore
                return cached.result;
            }
            // @ts-ignore
            s0 = peg$currPos;
            // @ts-ignore
            s1 = peg$parseIDENTIFIER();
            // @ts-ignore
            if (s1 !== peg$FAILED) {
                // @ts-ignore
                peg$savedPos = s0;
                // @ts-ignore
                s1 = peg$f24(s1);
            }
            // @ts-ignore
            s0 = s1;
            // @ts-ignore
            if (s0 === peg$FAILED) {
                // @ts-ignore
                s0 = peg$currPos;
                // @ts-ignore
                s1 = peg$parseDELIMITEDIDENTIFIER();
                // @ts-ignore
                if (s1 !== peg$FAILED) {
                    // @ts-ignore
                    peg$savedPos = s0;
                    // @ts-ignore
                    s1 = peg$f25(s1);
                }
                // @ts-ignore
                s0 = s1;
            }
            // @ts-ignore
            peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };
            // @ts-ignore
            return s0;
        }
        // @ts-ignore
        function peg$parseDATE() {
            // @ts-ignore
            var s0, s1, s2;
            // @ts-ignore
            var key = peg$currPos * 35 + 25;
            // @ts-ignore
            var cached = peg$resultsCache[key];
            // @ts-ignore
            if (cached) {
                // @ts-ignore
                peg$currPos = cached.nextPos;
                // @ts-ignore
                return cached.result;
            }
            // @ts-ignore
            s0 = peg$currPos;
            // @ts-ignore
            if (input.charCodeAt(peg$currPos) === 64) {
                // @ts-ignore
                s1 = peg$c52;
                // @ts-ignore
                peg$currPos++;
                // @ts-ignore
            }
            else {
                // @ts-ignore
                s1 = peg$FAILED;
                // @ts-ignore
                if (peg$silentFails === 0) {
                    peg$fail(peg$e53);
                }
            }
            // @ts-ignore
            if (s1 !== peg$FAILED) {
                // @ts-ignore
                s2 = peg$parseDATEFORMAT();
                // @ts-ignore
                if (s2 !== peg$FAILED) {
                    // @ts-ignore
                    peg$savedPos = s0;
                    // @ts-ignore
                    s0 = peg$f26(s2);
                    // @ts-ignore
                }
                else {
                    // @ts-ignore
                    peg$currPos = s0;
                    // @ts-ignore
                    s0 = peg$FAILED;
                }
                // @ts-ignore
            }
            else {
                // @ts-ignore
                peg$currPos = s0;
                // @ts-ignore
                s0 = peg$FAILED;
            }
            // @ts-ignore
            peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };
            // @ts-ignore
            return s0;
        }
        // @ts-ignore
        function peg$parseDATETIME() {
            // @ts-ignore
            var s0, s1, s2, s3, s4, s5, s6, s7, s8;
            // @ts-ignore
            var key = peg$currPos * 35 + 26;
            // @ts-ignore
            var cached = peg$resultsCache[key];
            // @ts-ignore
            if (cached) {
                // @ts-ignore
                peg$currPos = cached.nextPos;
                // @ts-ignore
                return cached.result;
            }
            // @ts-ignore
            s0 = peg$currPos;
            // @ts-ignore
            if (input.charCodeAt(peg$currPos) === 64) {
                // @ts-ignore
                s1 = peg$c52;
                // @ts-ignore
                peg$currPos++;
                // @ts-ignore
            }
            else {
                // @ts-ignore
                s1 = peg$FAILED;
                // @ts-ignore
                if (peg$silentFails === 0) {
                    peg$fail(peg$e53);
                }
            }
            // @ts-ignore
            if (s1 !== peg$FAILED) {
                // @ts-ignore
                s2 = peg$currPos;
                // @ts-ignore
                s3 = peg$currPos;
                // @ts-ignore
                s4 = peg$parseDATEFORMAT();
                // @ts-ignore
                if (s4 !== peg$FAILED) {
                    // @ts-ignore
                    if (input.charCodeAt(peg$currPos) === 84) {
                        // @ts-ignore
                        s5 = peg$c53;
                        // @ts-ignore
                        peg$currPos++;
                        // @ts-ignore
                    }
                    else {
                        // @ts-ignore
                        s5 = peg$FAILED;
                        // @ts-ignore
                        if (peg$silentFails === 0) {
                            peg$fail(peg$e54);
                        }
                    }
                    // @ts-ignore
                    if (s5 !== peg$FAILED) {
                        // @ts-ignore
                        s6 = peg$currPos;
                        // @ts-ignore
                        s7 = peg$parseTIMEFORMAT();
                        // @ts-ignore
                        if (s7 !== peg$FAILED) {
                            // @ts-ignore
                            s8 = peg$parseTIMEZONEOFFSETFORMAT();
                            // @ts-ignore
                            if (s8 === peg$FAILED) {
                                // @ts-ignore
                                s8 = null;
                            }
                            // @ts-ignore
                            s7 = [s7, s8];
                            // @ts-ignore
                            s6 = s7;
                            // @ts-ignore
                        }
                        else {
                            // @ts-ignore
                            peg$currPos = s6;
                            // @ts-ignore
                            s6 = peg$FAILED;
                        }
                        // @ts-ignore
                        if (s6 === peg$FAILED) {
                            // @ts-ignore
                            s6 = null;
                        }
                        // @ts-ignore
                        s4 = [s4, s5, s6];
                        // @ts-ignore
                        s3 = s4;
                        // @ts-ignore
                    }
                    else {
                        // @ts-ignore
                        peg$currPos = s3;
                        // @ts-ignore
                        s3 = peg$FAILED;
                    }
                    // @ts-ignore
                }
                else {
                    // @ts-ignore
                    peg$currPos = s3;
                    // @ts-ignore
                    s3 = peg$FAILED;
                }
                // @ts-ignore
                if (s3 !== peg$FAILED) {
                    // @ts-ignore
                    s2 = input.substring(s2, peg$currPos);
                    // @ts-ignore
                }
                else {
                    // @ts-ignore
                    s2 = s3;
                }
                // @ts-ignore
                if (s2 !== peg$FAILED) {
                    // @ts-ignore
                    peg$savedPos = s0;
                    // @ts-ignore
                    s0 = peg$f27(s2);
                    // @ts-ignore
                }
                else {
                    // @ts-ignore
                    peg$currPos = s0;
                    // @ts-ignore
                    s0 = peg$FAILED;
                }
                // @ts-ignore
            }
            else {
                // @ts-ignore
                peg$currPos = s0;
                // @ts-ignore
                s0 = peg$FAILED;
            }
            // @ts-ignore
            peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };
            // @ts-ignore
            return s0;
        }
        // @ts-ignore
        function peg$parseTIME() {
            // @ts-ignore
            var s0, s1, s2, s3;
            // @ts-ignore
            var key = peg$currPos * 35 + 27;
            // @ts-ignore
            var cached = peg$resultsCache[key];
            // @ts-ignore
            if (cached) {
                // @ts-ignore
                peg$currPos = cached.nextPos;
                // @ts-ignore
                return cached.result;
            }
            // @ts-ignore
            s0 = peg$currPos;
            // @ts-ignore
            if (input.charCodeAt(peg$currPos) === 64) {
                // @ts-ignore
                s1 = peg$c52;
                // @ts-ignore
                peg$currPos++;
                // @ts-ignore
            }
            else {
                // @ts-ignore
                s1 = peg$FAILED;
                // @ts-ignore
                if (peg$silentFails === 0) {
                    peg$fail(peg$e53);
                }
            }
            // @ts-ignore
            if (s1 !== peg$FAILED) {
                // @ts-ignore
                if (input.charCodeAt(peg$currPos) === 84) {
                    // @ts-ignore
                    s2 = peg$c53;
                    // @ts-ignore
                    peg$currPos++;
                    // @ts-ignore
                }
                else {
                    // @ts-ignore
                    s2 = peg$FAILED;
                    // @ts-ignore
                    if (peg$silentFails === 0) {
                        peg$fail(peg$e54);
                    }
                }
                // @ts-ignore
                if (s2 !== peg$FAILED) {
                    // @ts-ignore
                    s3 = peg$parseTIMEFORMAT();
                    // @ts-ignore
                    if (s3 !== peg$FAILED) {
                        // @ts-ignore
                        peg$savedPos = s0;
                        // @ts-ignore
                        s0 = peg$f28(s3);
                        // @ts-ignore
                    }
                    else {
                        // @ts-ignore
                        peg$currPos = s0;
                        // @ts-ignore
                        s0 = peg$FAILED;
                    }
                    // @ts-ignore
                }
                else {
                    // @ts-ignore
                    peg$currPos = s0;
                    // @ts-ignore
                    s0 = peg$FAILED;
                }
                // @ts-ignore
            }
            else {
                // @ts-ignore
                peg$currPos = s0;
                // @ts-ignore
                s0 = peg$FAILED;
            }
            // @ts-ignore
            peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };
            // @ts-ignore
            return s0;
        }
        // @ts-ignore
        function peg$parseDATEFORMAT() {
            // @ts-ignore
            var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13;
            // @ts-ignore
            var key = peg$currPos * 35 + 28;
            // @ts-ignore
            var cached = peg$resultsCache[key];
            // @ts-ignore
            if (cached) {
                // @ts-ignore
                peg$currPos = cached.nextPos;
                // @ts-ignore
                return cached.result;
            }
            // @ts-ignore
            s0 = peg$currPos;
            // @ts-ignore
            s1 = peg$currPos;
            // @ts-ignore
            if (peg$r0.test(input.charAt(peg$currPos))) {
                // @ts-ignore
                s2 = input.charAt(peg$currPos);
                // @ts-ignore
                peg$currPos++;
                // @ts-ignore
            }
            else {
                // @ts-ignore
                s2 = peg$FAILED;
                // @ts-ignore
                if (peg$silentFails === 0) {
                    peg$fail(peg$e31);
                }
            }
            // @ts-ignore
            if (s2 !== peg$FAILED) {
                // @ts-ignore
                if (peg$r0.test(input.charAt(peg$currPos))) {
                    // @ts-ignore
                    s3 = input.charAt(peg$currPos);
                    // @ts-ignore
                    peg$currPos++;
                    // @ts-ignore
                }
                else {
                    // @ts-ignore
                    s3 = peg$FAILED;
                    // @ts-ignore
                    if (peg$silentFails === 0) {
                        peg$fail(peg$e31);
                    }
                }
                // @ts-ignore
                if (s3 !== peg$FAILED) {
                    // @ts-ignore
                    if (peg$r0.test(input.charAt(peg$currPos))) {
                        // @ts-ignore
                        s4 = input.charAt(peg$currPos);
                        // @ts-ignore
                        peg$currPos++;
                        // @ts-ignore
                    }
                    else {
                        // @ts-ignore
                        s4 = peg$FAILED;
                        // @ts-ignore
                        if (peg$silentFails === 0) {
                            peg$fail(peg$e31);
                        }
                    }
                    // @ts-ignore
                    if (s4 !== peg$FAILED) {
                        // @ts-ignore
                        if (peg$r0.test(input.charAt(peg$currPos))) {
                            // @ts-ignore
                            s5 = input.charAt(peg$currPos);
                            // @ts-ignore
                            peg$currPos++;
                            // @ts-ignore
                        }
                        else {
                            // @ts-ignore
                            s5 = peg$FAILED;
                            // @ts-ignore
                            if (peg$silentFails === 0) {
                                peg$fail(peg$e31);
                            }
                        }
                        // @ts-ignore
                        if (s5 !== peg$FAILED) {
                            // @ts-ignore
                            s6 = peg$currPos;
                            // @ts-ignore
                            if (input.charCodeAt(peg$currPos) === 45) {
                                // @ts-ignore
                                s7 = peg$c9;
                                // @ts-ignore
                                peg$currPos++;
                                // @ts-ignore
                            }
                            else {
                                // @ts-ignore
                                s7 = peg$FAILED;
                                // @ts-ignore
                                if (peg$silentFails === 0) {
                                    peg$fail(peg$e9);
                                }
                            }
                            // @ts-ignore
                            if (s7 !== peg$FAILED) {
                                // @ts-ignore
                                if (peg$r0.test(input.charAt(peg$currPos))) {
                                    // @ts-ignore
                                    s8 = input.charAt(peg$currPos);
                                    // @ts-ignore
                                    peg$currPos++;
                                    // @ts-ignore
                                }
                                else {
                                    // @ts-ignore
                                    s8 = peg$FAILED;
                                    // @ts-ignore
                                    if (peg$silentFails === 0) {
                                        peg$fail(peg$e31);
                                    }
                                }
                                // @ts-ignore
                                if (s8 !== peg$FAILED) {
                                    // @ts-ignore
                                    if (peg$r0.test(input.charAt(peg$currPos))) {
                                        // @ts-ignore
                                        s9 = input.charAt(peg$currPos);
                                        // @ts-ignore
                                        peg$currPos++;
                                        // @ts-ignore
                                    }
                                    else {
                                        // @ts-ignore
                                        s9 = peg$FAILED;
                                        // @ts-ignore
                                        if (peg$silentFails === 0) {
                                            peg$fail(peg$e31);
                                        }
                                    }
                                    // @ts-ignore
                                    if (s9 !== peg$FAILED) {
                                        // @ts-ignore
                                        s10 = peg$currPos;
                                        // @ts-ignore
                                        if (input.charCodeAt(peg$currPos) === 45) {
                                            // @ts-ignore
                                            s11 = peg$c9;
                                            // @ts-ignore
                                            peg$currPos++;
                                            // @ts-ignore
                                        }
                                        else {
                                            // @ts-ignore
                                            s11 = peg$FAILED;
                                            // @ts-ignore
                                            if (peg$silentFails === 0) {
                                                peg$fail(peg$e9);
                                            }
                                        }
                                        // @ts-ignore
                                        if (s11 !== peg$FAILED) {
                                            // @ts-ignore
                                            if (peg$r0.test(input.charAt(peg$currPos))) {
                                                // @ts-ignore
                                                s12 = input.charAt(peg$currPos);
                                                // @ts-ignore
                                                peg$currPos++;
                                                // @ts-ignore
                                            }
                                            else {
                                                // @ts-ignore
                                                s12 = peg$FAILED;
                                                // @ts-ignore
                                                if (peg$silentFails === 0) {
                                                    peg$fail(peg$e31);
                                                }
                                            }
                                            // @ts-ignore
                                            if (s12 !== peg$FAILED) {
                                                // @ts-ignore
                                                if (peg$r0.test(input.charAt(peg$currPos))) {
                                                    // @ts-ignore
                                                    s13 = input.charAt(peg$currPos);
                                                    // @ts-ignore
                                                    peg$currPos++;
                                                    // @ts-ignore
                                                }
                                                else {
                                                    // @ts-ignore
                                                    s13 = peg$FAILED;
                                                    // @ts-ignore
                                                    if (peg$silentFails === 0) {
                                                        peg$fail(peg$e31);
                                                    }
                                                }
                                                // @ts-ignore
                                                if (s13 !== peg$FAILED) {
                                                    // @ts-ignore
                                                    s11 = [s11, s12, s13];
                                                    // @ts-ignore
                                                    s10 = s11;
                                                    // @ts-ignore
                                                }
                                                else {
                                                    // @ts-ignore
                                                    peg$currPos = s10;
                                                    // @ts-ignore
                                                    s10 = peg$FAILED;
                                                }
                                                // @ts-ignore
                                            }
                                            else {
                                                // @ts-ignore
                                                peg$currPos = s10;
                                                // @ts-ignore
                                                s10 = peg$FAILED;
                                            }
                                            // @ts-ignore
                                        }
                                        else {
                                            // @ts-ignore
                                            peg$currPos = s10;
                                            // @ts-ignore
                                            s10 = peg$FAILED;
                                        }
                                        // @ts-ignore
                                        if (s10 === peg$FAILED) {
                                            // @ts-ignore
                                            s10 = null;
                                        }
                                        // @ts-ignore
                                        s7 = [s7, s8, s9, s10];
                                        // @ts-ignore
                                        s6 = s7;
                                        // @ts-ignore
                                    }
                                    else {
                                        // @ts-ignore
                                        peg$currPos = s6;
                                        // @ts-ignore
                                        s6 = peg$FAILED;
                                    }
                                    // @ts-ignore
                                }
                                else {
                                    // @ts-ignore
                                    peg$currPos = s6;
                                    // @ts-ignore
                                    s6 = peg$FAILED;
                                }
                                // @ts-ignore
                            }
                            else {
                                // @ts-ignore
                                peg$currPos = s6;
                                // @ts-ignore
                                s6 = peg$FAILED;
                            }
                            // @ts-ignore
                            if (s6 === peg$FAILED) {
                                // @ts-ignore
                                s6 = null;
                            }
                            // @ts-ignore
                            s2 = [s2, s3, s4, s5, s6];
                            // @ts-ignore
                            s1 = s2;
                            // @ts-ignore
                        }
                        else {
                            // @ts-ignore
                            peg$currPos = s1;
                            // @ts-ignore
                            s1 = peg$FAILED;
                        }
                        // @ts-ignore
                    }
                    else {
                        // @ts-ignore
                        peg$currPos = s1;
                        // @ts-ignore
                        s1 = peg$FAILED;
                    }
                    // @ts-ignore
                }
                else {
                    // @ts-ignore
                    peg$currPos = s1;
                    // @ts-ignore
                    s1 = peg$FAILED;
                }
                // @ts-ignore
            }
            else {
                // @ts-ignore
                peg$currPos = s1;
                // @ts-ignore
                s1 = peg$FAILED;
            }
            // @ts-ignore
            if (s1 !== peg$FAILED) {
                // @ts-ignore
                s0 = input.substring(s0, peg$currPos);
                // @ts-ignore
            }
            else {
                // @ts-ignore
                s0 = s1;
            }
            // @ts-ignore
            peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };
            // @ts-ignore
            return s0;
        }
        // @ts-ignore
        function peg$parseTIMEFORMAT() {
            // @ts-ignore
            var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15;
            // @ts-ignore
            var key = peg$currPos * 35 + 29;
            // @ts-ignore
            var cached = peg$resultsCache[key];
            // @ts-ignore
            if (cached) {
                // @ts-ignore
                peg$currPos = cached.nextPos;
                // @ts-ignore
                return cached.result;
            }
            // @ts-ignore
            s0 = peg$currPos;
            // @ts-ignore
            s1 = peg$currPos;
            // @ts-ignore
            if (peg$r0.test(input.charAt(peg$currPos))) {
                // @ts-ignore
                s2 = input.charAt(peg$currPos);
                // @ts-ignore
                peg$currPos++;
                // @ts-ignore
            }
            else {
                // @ts-ignore
                s2 = peg$FAILED;
                // @ts-ignore
                if (peg$silentFails === 0) {
                    peg$fail(peg$e31);
                }
            }
            // @ts-ignore
            if (s2 !== peg$FAILED) {
                // @ts-ignore
                if (peg$r0.test(input.charAt(peg$currPos))) {
                    // @ts-ignore
                    s3 = input.charAt(peg$currPos);
                    // @ts-ignore
                    peg$currPos++;
                    // @ts-ignore
                }
                else {
                    // @ts-ignore
                    s3 = peg$FAILED;
                    // @ts-ignore
                    if (peg$silentFails === 0) {
                        peg$fail(peg$e31);
                    }
                }
                // @ts-ignore
                if (s3 !== peg$FAILED) {
                    // @ts-ignore
                    s4 = peg$currPos;
                    // @ts-ignore
                    if (input.charCodeAt(peg$currPos) === 58) {
                        // @ts-ignore
                        s5 = peg$c54;
                        // @ts-ignore
                        peg$currPos++;
                        // @ts-ignore
                    }
                    else {
                        // @ts-ignore
                        s5 = peg$FAILED;
                        // @ts-ignore
                        if (peg$silentFails === 0) {
                            peg$fail(peg$e55);
                        }
                    }
                    // @ts-ignore
                    if (s5 !== peg$FAILED) {
                        // @ts-ignore
                        if (peg$r0.test(input.charAt(peg$currPos))) {
                            // @ts-ignore
                            s6 = input.charAt(peg$currPos);
                            // @ts-ignore
                            peg$currPos++;
                            // @ts-ignore
                        }
                        else {
                            // @ts-ignore
                            s6 = peg$FAILED;
                            // @ts-ignore
                            if (peg$silentFails === 0) {
                                peg$fail(peg$e31);
                            }
                        }
                        // @ts-ignore
                        if (s6 !== peg$FAILED) {
                            // @ts-ignore
                            if (peg$r0.test(input.charAt(peg$currPos))) {
                                // @ts-ignore
                                s7 = input.charAt(peg$currPos);
                                // @ts-ignore
                                peg$currPos++;
                                // @ts-ignore
                            }
                            else {
                                // @ts-ignore
                                s7 = peg$FAILED;
                                // @ts-ignore
                                if (peg$silentFails === 0) {
                                    peg$fail(peg$e31);
                                }
                            }
                            // @ts-ignore
                            if (s7 !== peg$FAILED) {
                                // @ts-ignore
                                s8 = peg$currPos;
                                // @ts-ignore
                                if (input.charCodeAt(peg$currPos) === 58) {
                                    // @ts-ignore
                                    s9 = peg$c54;
                                    // @ts-ignore
                                    peg$currPos++;
                                    // @ts-ignore
                                }
                                else {
                                    // @ts-ignore
                                    s9 = peg$FAILED;
                                    // @ts-ignore
                                    if (peg$silentFails === 0) {
                                        peg$fail(peg$e55);
                                    }
                                }
                                // @ts-ignore
                                if (s9 !== peg$FAILED) {
                                    // @ts-ignore
                                    if (peg$r0.test(input.charAt(peg$currPos))) {
                                        // @ts-ignore
                                        s10 = input.charAt(peg$currPos);
                                        // @ts-ignore
                                        peg$currPos++;
                                        // @ts-ignore
                                    }
                                    else {
                                        // @ts-ignore
                                        s10 = peg$FAILED;
                                        // @ts-ignore
                                        if (peg$silentFails === 0) {
                                            peg$fail(peg$e31);
                                        }
                                    }
                                    // @ts-ignore
                                    if (s10 !== peg$FAILED) {
                                        // @ts-ignore
                                        if (peg$r0.test(input.charAt(peg$currPos))) {
                                            // @ts-ignore
                                            s11 = input.charAt(peg$currPos);
                                            // @ts-ignore
                                            peg$currPos++;
                                            // @ts-ignore
                                        }
                                        else {
                                            // @ts-ignore
                                            s11 = peg$FAILED;
                                            // @ts-ignore
                                            if (peg$silentFails === 0) {
                                                peg$fail(peg$e31);
                                            }
                                        }
                                        // @ts-ignore
                                        if (s11 !== peg$FAILED) {
                                            // @ts-ignore
                                            s12 = peg$currPos;
                                            // @ts-ignore
                                            if (input.charCodeAt(peg$currPos) === 46) {
                                                // @ts-ignore
                                                s13 = peg$c22;
                                                // @ts-ignore
                                                peg$currPos++;
                                                // @ts-ignore
                                            }
                                            else {
                                                // @ts-ignore
                                                s13 = peg$FAILED;
                                                // @ts-ignore
                                                if (peg$silentFails === 0) {
                                                    peg$fail(peg$e22);
                                                }
                                            }
                                            // @ts-ignore
                                            if (s13 !== peg$FAILED) {
                                                // @ts-ignore
                                                s14 = [];
                                                // @ts-ignore
                                                if (peg$r0.test(input.charAt(peg$currPos))) {
                                                    // @ts-ignore
                                                    s15 = input.charAt(peg$currPos);
                                                    // @ts-ignore
                                                    peg$currPos++;
                                                    // @ts-ignore
                                                }
                                                else {
                                                    // @ts-ignore
                                                    s15 = peg$FAILED;
                                                    // @ts-ignore
                                                    if (peg$silentFails === 0) {
                                                        peg$fail(peg$e31);
                                                    }
                                                }
                                                // @ts-ignore
                                                if (s15 !== peg$FAILED) {
                                                    // @ts-ignore
                                                    while (s15 !== peg$FAILED) {
                                                        // @ts-ignore
                                                        s14.push(s15);
                                                        // @ts-ignore
                                                        if (peg$r0.test(input.charAt(peg$currPos))) {
                                                            // @ts-ignore
                                                            s15 = input.charAt(peg$currPos);
                                                            // @ts-ignore
                                                            peg$currPos++;
                                                            // @ts-ignore
                                                        }
                                                        else {
                                                            // @ts-ignore
                                                            s15 = peg$FAILED;
                                                            // @ts-ignore
                                                            if (peg$silentFails === 0) {
                                                                peg$fail(peg$e31);
                                                            }
                                                        }
                                                    }
                                                    // @ts-ignore
                                                }
                                                else {
                                                    // @ts-ignore
                                                    s14 = peg$FAILED;
                                                }
                                                // @ts-ignore
                                                if (s14 !== peg$FAILED) {
                                                    // @ts-ignore
                                                    s13 = [s13, s14];
                                                    // @ts-ignore
                                                    s12 = s13;
                                                    // @ts-ignore
                                                }
                                                else {
                                                    // @ts-ignore
                                                    peg$currPos = s12;
                                                    // @ts-ignore
                                                    s12 = peg$FAILED;
                                                }
                                                // @ts-ignore
                                            }
                                            else {
                                                // @ts-ignore
                                                peg$currPos = s12;
                                                // @ts-ignore
                                                s12 = peg$FAILED;
                                            }
                                            // @ts-ignore
                                            if (s12 === peg$FAILED) {
                                                // @ts-ignore
                                                s12 = null;
                                            }
                                            // @ts-ignore
                                            s9 = [s9, s10, s11, s12];
                                            // @ts-ignore
                                            s8 = s9;
                                            // @ts-ignore
                                        }
                                        else {
                                            // @ts-ignore
                                            peg$currPos = s8;
                                            // @ts-ignore
                                            s8 = peg$FAILED;
                                        }
                                        // @ts-ignore
                                    }
                                    else {
                                        // @ts-ignore
                                        peg$currPos = s8;
                                        // @ts-ignore
                                        s8 = peg$FAILED;
                                    }
                                    // @ts-ignore
                                }
                                else {
                                    // @ts-ignore
                                    peg$currPos = s8;
                                    // @ts-ignore
                                    s8 = peg$FAILED;
                                }
                                // @ts-ignore
                                if (s8 === peg$FAILED) {
                                    // @ts-ignore
                                    s8 = null;
                                }
                                // @ts-ignore
                                s5 = [s5, s6, s7, s8];
                                // @ts-ignore
                                s4 = s5;
                                // @ts-ignore
                            }
                            else {
                                // @ts-ignore
                                peg$currPos = s4;
                                // @ts-ignore
                                s4 = peg$FAILED;
                            }
                            // @ts-ignore
                        }
                        else {
                            // @ts-ignore
                            peg$currPos = s4;
                            // @ts-ignore
                            s4 = peg$FAILED;
                        }
                        // @ts-ignore
                    }
                    else {
                        // @ts-ignore
                        peg$currPos = s4;
                        // @ts-ignore
                        s4 = peg$FAILED;
                    }
                    // @ts-ignore
                    if (s4 === peg$FAILED) {
                        // @ts-ignore
                        s4 = null;
                    }
                    // @ts-ignore
                    s2 = [s2, s3, s4];
                    // @ts-ignore
                    s1 = s2;
                    // @ts-ignore
                }
                else {
                    // @ts-ignore
                    peg$currPos = s1;
                    // @ts-ignore
                    s1 = peg$FAILED;
                }
                // @ts-ignore
            }
            else {
                // @ts-ignore
                peg$currPos = s1;
                // @ts-ignore
                s1 = peg$FAILED;
            }
            // @ts-ignore
            if (s1 !== peg$FAILED) {
                // @ts-ignore
                s0 = input.substring(s0, peg$currPos);
                // @ts-ignore
            }
            else {
                // @ts-ignore
                s0 = s1;
            }
            // @ts-ignore
            peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };
            // @ts-ignore
            return s0;
        }
        // @ts-ignore
        function peg$parseTIMEZONEOFFSETFORMAT() {
            // @ts-ignore
            var s0, s1, s2, s3, s4, s5, s6, s7;
            // @ts-ignore
            var key = peg$currPos * 35 + 30;
            // @ts-ignore
            var cached = peg$resultsCache[key];
            // @ts-ignore
            if (cached) {
                // @ts-ignore
                peg$currPos = cached.nextPos;
                // @ts-ignore
                return cached.result;
            }
            // @ts-ignore
            s0 = peg$currPos;
            // @ts-ignore
            if (input.charCodeAt(peg$currPos) === 90) {
                // @ts-ignore
                s1 = peg$c55;
                // @ts-ignore
                peg$currPos++;
                // @ts-ignore
            }
            else {
                // @ts-ignore
                s1 = peg$FAILED;
                // @ts-ignore
                if (peg$silentFails === 0) {
                    peg$fail(peg$e56);
                }
            }
            // @ts-ignore
            if (s1 === peg$FAILED) {
                // @ts-ignore
                s1 = peg$currPos;
                // @ts-ignore
                if (input.charCodeAt(peg$currPos) === 43) {
                    // @ts-ignore
                    s2 = peg$c8;
                    // @ts-ignore
                    peg$currPos++;
                    // @ts-ignore
                }
                else {
                    // @ts-ignore
                    s2 = peg$FAILED;
                    // @ts-ignore
                    if (peg$silentFails === 0) {
                        peg$fail(peg$e8);
                    }
                }
                // @ts-ignore
                if (s2 === peg$FAILED) {
                    // @ts-ignore
                    if (input.charCodeAt(peg$currPos) === 45) {
                        // @ts-ignore
                        s2 = peg$c9;
                        // @ts-ignore
                        peg$currPos++;
                        // @ts-ignore
                    }
                    else {
                        // @ts-ignore
                        s2 = peg$FAILED;
                        // @ts-ignore
                        if (peg$silentFails === 0) {
                            peg$fail(peg$e9);
                        }
                    }
                }
                // @ts-ignore
                if (s2 !== peg$FAILED) {
                    // @ts-ignore
                    if (peg$r0.test(input.charAt(peg$currPos))) {
                        // @ts-ignore
                        s3 = input.charAt(peg$currPos);
                        // @ts-ignore
                        peg$currPos++;
                        // @ts-ignore
                    }
                    else {
                        // @ts-ignore
                        s3 = peg$FAILED;
                        // @ts-ignore
                        if (peg$silentFails === 0) {
                            peg$fail(peg$e31);
                        }
                    }
                    // @ts-ignore
                    if (s3 !== peg$FAILED) {
                        // @ts-ignore
                        if (peg$r0.test(input.charAt(peg$currPos))) {
                            // @ts-ignore
                            s4 = input.charAt(peg$currPos);
                            // @ts-ignore
                            peg$currPos++;
                            // @ts-ignore
                        }
                        else {
                            // @ts-ignore
                            s4 = peg$FAILED;
                            // @ts-ignore
                            if (peg$silentFails === 0) {
                                peg$fail(peg$e31);
                            }
                        }
                        // @ts-ignore
                        if (s4 !== peg$FAILED) {
                            // @ts-ignore
                            if (input.charCodeAt(peg$currPos) === 58) {
                                // @ts-ignore
                                s5 = peg$c54;
                                // @ts-ignore
                                peg$currPos++;
                                // @ts-ignore
                            }
                            else {
                                // @ts-ignore
                                s5 = peg$FAILED;
                                // @ts-ignore
                                if (peg$silentFails === 0) {
                                    peg$fail(peg$e55);
                                }
                            }
                            // @ts-ignore
                            if (s5 !== peg$FAILED) {
                                // @ts-ignore
                                if (peg$r0.test(input.charAt(peg$currPos))) {
                                    // @ts-ignore
                                    s6 = input.charAt(peg$currPos);
                                    // @ts-ignore
                                    peg$currPos++;
                                    // @ts-ignore
                                }
                                else {
                                    // @ts-ignore
                                    s6 = peg$FAILED;
                                    // @ts-ignore
                                    if (peg$silentFails === 0) {
                                        peg$fail(peg$e31);
                                    }
                                }
                                // @ts-ignore
                                if (s6 !== peg$FAILED) {
                                    // @ts-ignore
                                    if (peg$r0.test(input.charAt(peg$currPos))) {
                                        // @ts-ignore
                                        s7 = input.charAt(peg$currPos);
                                        // @ts-ignore
                                        peg$currPos++;
                                        // @ts-ignore
                                    }
                                    else {
                                        // @ts-ignore
                                        s7 = peg$FAILED;
                                        // @ts-ignore
                                        if (peg$silentFails === 0) {
                                            peg$fail(peg$e31);
                                        }
                                    }
                                    // @ts-ignore
                                    if (s7 !== peg$FAILED) {
                                        // @ts-ignore
                                        s2 = [s2, s3, s4, s5, s6, s7];
                                        // @ts-ignore
                                        s1 = s2;
                                        // @ts-ignore
                                    }
                                    else {
                                        // @ts-ignore
                                        peg$currPos = s1;
                                        // @ts-ignore
                                        s1 = peg$FAILED;
                                    }
                                    // @ts-ignore
                                }
                                else {
                                    // @ts-ignore
                                    peg$currPos = s1;
                                    // @ts-ignore
                                    s1 = peg$FAILED;
                                }
                                // @ts-ignore
                            }
                            else {
                                // @ts-ignore
                                peg$currPos = s1;
                                // @ts-ignore
                                s1 = peg$FAILED;
                            }
                            // @ts-ignore
                        }
                        else {
                            // @ts-ignore
                            peg$currPos = s1;
                            // @ts-ignore
                            s1 = peg$FAILED;
                        }
                        // @ts-ignore
                    }
                    else {
                        // @ts-ignore
                        peg$currPos = s1;
                        // @ts-ignore
                        s1 = peg$FAILED;
                    }
                    // @ts-ignore
                }
                else {
                    // @ts-ignore
                    peg$currPos = s1;
                    // @ts-ignore
                    s1 = peg$FAILED;
                }
            }
            // @ts-ignore
            if (s1 !== peg$FAILED) {
                // @ts-ignore
                s0 = input.substring(s0, peg$currPos);
                // @ts-ignore
            }
            else {
                // @ts-ignore
                s0 = s1;
            }
            // @ts-ignore
            peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };
            // @ts-ignore
            return s0;
        }
        // @ts-ignore
        function peg$parseIDENTIFIER() {
            // @ts-ignore
            var s0, s1, s2, s3, s4;
            // @ts-ignore
            var key = peg$currPos * 35 + 31;
            // @ts-ignore
            var cached = peg$resultsCache[key];
            // @ts-ignore
            if (cached) {
                // @ts-ignore
                peg$currPos = cached.nextPos;
                // @ts-ignore
                return cached.result;
            }
            // @ts-ignore
            s0 = peg$currPos;
            // @ts-ignore
            s1 = peg$currPos;
            // @ts-ignore
            if (peg$r1.test(input.charAt(peg$currPos))) {
                // @ts-ignore
                s2 = input.charAt(peg$currPos);
                // @ts-ignore
                peg$currPos++;
                // @ts-ignore
            }
            else {
                // @ts-ignore
                s2 = peg$FAILED;
                // @ts-ignore
                if (peg$silentFails === 0) {
                    peg$fail(peg$e57);
                }
            }
            // @ts-ignore
            if (s2 === peg$FAILED) {
                // @ts-ignore
                if (input.charCodeAt(peg$currPos) === 95) {
                    // @ts-ignore
                    s2 = peg$c56;
                    // @ts-ignore
                    peg$currPos++;
                    // @ts-ignore
                }
                else {
                    // @ts-ignore
                    s2 = peg$FAILED;
                    // @ts-ignore
                    if (peg$silentFails === 0) {
                        peg$fail(peg$e58);
                    }
                }
            }
            // @ts-ignore
            if (s2 !== peg$FAILED) {
                // @ts-ignore
                s3 = [];
                // @ts-ignore
                if (peg$r2.test(input.charAt(peg$currPos))) {
                    // @ts-ignore
                    s4 = input.charAt(peg$currPos);
                    // @ts-ignore
                    peg$currPos++;
                    // @ts-ignore
                }
                else {
                    // @ts-ignore
                    s4 = peg$FAILED;
                    // @ts-ignore
                    if (peg$silentFails === 0) {
                        peg$fail(peg$e59);
                    }
                }
                // @ts-ignore
                if (s4 === peg$FAILED) {
                    // @ts-ignore
                    if (input.charCodeAt(peg$currPos) === 95) {
                        // @ts-ignore
                        s4 = peg$c56;
                        // @ts-ignore
                        peg$currPos++;
                        // @ts-ignore
                    }
                    else {
                        // @ts-ignore
                        s4 = peg$FAILED;
                        // @ts-ignore
                        if (peg$silentFails === 0) {
                            peg$fail(peg$e58);
                        }
                    }
                }
                // @ts-ignore
                while (s4 !== peg$FAILED) {
                    // @ts-ignore
                    s3.push(s4);
                    // @ts-ignore
                    if (peg$r2.test(input.charAt(peg$currPos))) {
                        // @ts-ignore
                        s4 = input.charAt(peg$currPos);
                        // @ts-ignore
                        peg$currPos++;
                        // @ts-ignore
                    }
                    else {
                        // @ts-ignore
                        s4 = peg$FAILED;
                        // @ts-ignore
                        if (peg$silentFails === 0) {
                            peg$fail(peg$e59);
                        }
                    }
                    // @ts-ignore
                    if (s4 === peg$FAILED) {
                        // @ts-ignore
                        if (input.charCodeAt(peg$currPos) === 95) {
                            // @ts-ignore
                            s4 = peg$c56;
                            // @ts-ignore
                            peg$currPos++;
                            // @ts-ignore
                        }
                        else {
                            // @ts-ignore
                            s4 = peg$FAILED;
                            // @ts-ignore
                            if (peg$silentFails === 0) {
                                peg$fail(peg$e58);
                            }
                        }
                    }
                }
                // @ts-ignore
                s2 = [s2, s3];
                // @ts-ignore
                s1 = s2;
                // @ts-ignore
            }
            else {
                // @ts-ignore
                peg$currPos = s1;
                // @ts-ignore
                s1 = peg$FAILED;
            }
            // @ts-ignore
            if (s1 !== peg$FAILED) {
                // @ts-ignore
                s0 = input.substring(s0, peg$currPos);
                // @ts-ignore
            }
            else {
                // @ts-ignore
                s0 = s1;
            }
            // @ts-ignore
            peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };
            // @ts-ignore
            return s0;
        }
        // @ts-ignore
        function peg$parseDELIMITEDIDENTIFIER() {
            // @ts-ignore
            var s0, s1, s2, s3, s4;
            // @ts-ignore
            var key = peg$currPos * 35 + 32;
            // @ts-ignore
            var cached = peg$resultsCache[key];
            // @ts-ignore
            if (cached) {
                // @ts-ignore
                peg$currPos = cached.nextPos;
                // @ts-ignore
                return cached.result;
            }
            // @ts-ignore
            s0 = peg$currPos;
            // @ts-ignore
            if (input.charCodeAt(peg$currPos) === 96) {
                // @ts-ignore
                s1 = peg$c57;
                // @ts-ignore
                peg$currPos++;
                // @ts-ignore
            }
            else {
                // @ts-ignore
                s1 = peg$FAILED;
                // @ts-ignore
                if (peg$silentFails === 0) {
                    peg$fail(peg$e60);
                }
            }
            // @ts-ignore
            if (s1 !== peg$FAILED) {
                // @ts-ignore
                s2 = peg$currPos;
                // @ts-ignore
                s3 = [];
                // @ts-ignore
                if (peg$r3.test(input.charAt(peg$currPos))) {
                    // @ts-ignore
                    s4 = input.charAt(peg$currPos);
                    // @ts-ignore
                    peg$currPos++;
                    // @ts-ignore
                }
                else {
                    // @ts-ignore
                    s4 = peg$FAILED;
                    // @ts-ignore
                    if (peg$silentFails === 0) {
                        peg$fail(peg$e61);
                    }
                }
                // @ts-ignore
                while (s4 !== peg$FAILED) {
                    // @ts-ignore
                    s3.push(s4);
                    // @ts-ignore
                    if (peg$r3.test(input.charAt(peg$currPos))) {
                        // @ts-ignore
                        s4 = input.charAt(peg$currPos);
                        // @ts-ignore
                        peg$currPos++;
                        // @ts-ignore
                    }
                    else {
                        // @ts-ignore
                        s4 = peg$FAILED;
                        // @ts-ignore
                        if (peg$silentFails === 0) {
                            peg$fail(peg$e61);
                        }
                    }
                }
                // @ts-ignore
                s2 = input.substring(s2, peg$currPos);
                // @ts-ignore
                if (input.charCodeAt(peg$currPos) === 96) {
                    // @ts-ignore
                    s3 = peg$c57;
                    // @ts-ignore
                    peg$currPos++;
                    // @ts-ignore
                }
                else {
                    // @ts-ignore
                    s3 = peg$FAILED;
                    // @ts-ignore
                    if (peg$silentFails === 0) {
                        peg$fail(peg$e60);
                    }
                }
                // @ts-ignore
                if (s3 !== peg$FAILED) {
                    // @ts-ignore
                    peg$savedPos = s0;
                    // @ts-ignore
                    s0 = peg$f29(s2);
                    // @ts-ignore
                }
                else {
                    // @ts-ignore
                    peg$currPos = s0;
                    // @ts-ignore
                    s0 = peg$FAILED;
                }
                // @ts-ignore
            }
            else {
                // @ts-ignore
                peg$currPos = s0;
                // @ts-ignore
                s0 = peg$FAILED;
            }
            // @ts-ignore
            peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };
            // @ts-ignore
            return s0;
        }
        // @ts-ignore
        function peg$parseSTRING() {
            // @ts-ignore
            var s0, s1, s2, s3, s4;
            // @ts-ignore
            var key = peg$currPos * 35 + 33;
            // @ts-ignore
            var cached = peg$resultsCache[key];
            // @ts-ignore
            if (cached) {
                // @ts-ignore
                peg$currPos = cached.nextPos;
                // @ts-ignore
                return cached.result;
            }
            // @ts-ignore
            s0 = peg$currPos;
            // @ts-ignore
            if (input.charCodeAt(peg$currPos) === 39) {
                // @ts-ignore
                s1 = peg$c58;
                // @ts-ignore
                peg$currPos++;
                // @ts-ignore
            }
            else {
                // @ts-ignore
                s1 = peg$FAILED;
                // @ts-ignore
                if (peg$silentFails === 0) {
                    peg$fail(peg$e62);
                }
            }
            // @ts-ignore
            if (s1 !== peg$FAILED) {
                // @ts-ignore
                s2 = peg$currPos;
                // @ts-ignore
                s3 = [];
                // @ts-ignore
                if (peg$r4.test(input.charAt(peg$currPos))) {
                    // @ts-ignore
                    s4 = input.charAt(peg$currPos);
                    // @ts-ignore
                    peg$currPos++;
                    // @ts-ignore
                }
                else {
                    // @ts-ignore
                    s4 = peg$FAILED;
                    // @ts-ignore
                    if (peg$silentFails === 0) {
                        peg$fail(peg$e63);
                    }
                }
                // @ts-ignore
                while (s4 !== peg$FAILED) {
                    // @ts-ignore
                    s3.push(s4);
                    // @ts-ignore
                    if (peg$r4.test(input.charAt(peg$currPos))) {
                        // @ts-ignore
                        s4 = input.charAt(peg$currPos);
                        // @ts-ignore
                        peg$currPos++;
                        // @ts-ignore
                    }
                    else {
                        // @ts-ignore
                        s4 = peg$FAILED;
                        // @ts-ignore
                        if (peg$silentFails === 0) {
                            peg$fail(peg$e63);
                        }
                    }
                }
                // @ts-ignore
                s2 = input.substring(s2, peg$currPos);
                // @ts-ignore
                if (input.charCodeAt(peg$currPos) === 39) {
                    // @ts-ignore
                    s3 = peg$c58;
                    // @ts-ignore
                    peg$currPos++;
                    // @ts-ignore
                }
                else {
                    // @ts-ignore
                    s3 = peg$FAILED;
                    // @ts-ignore
                    if (peg$silentFails === 0) {
                        peg$fail(peg$e62);
                    }
                }
                // @ts-ignore
                if (s3 !== peg$FAILED) {
                    // @ts-ignore
                    peg$savedPos = s0;
                    // @ts-ignore
                    s0 = peg$f30(s2);
                    // @ts-ignore
                }
                else {
                    // @ts-ignore
                    peg$currPos = s0;
                    // @ts-ignore
                    s0 = peg$FAILED;
                }
                // @ts-ignore
            }
            else {
                // @ts-ignore
                peg$currPos = s0;
                // @ts-ignore
                s0 = peg$FAILED;
            }
            // @ts-ignore
            peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };
            // @ts-ignore
            return s0;
        }
        // @ts-ignore
        function peg$parseWS() {
            // @ts-ignore
            var s0, s1;
            // @ts-ignore
            var key = peg$currPos * 35 + 34;
            // @ts-ignore
            var cached = peg$resultsCache[key];
            // @ts-ignore
            if (cached) {
                // @ts-ignore
                peg$currPos = cached.nextPos;
                // @ts-ignore
                return cached.result;
            }
            // @ts-ignore
            peg$silentFails++;
            // @ts-ignore
            s0 = [];
            // @ts-ignore
            if (input.charCodeAt(peg$currPos) === 9) {
                // @ts-ignore
                s1 = peg$c59;
                // @ts-ignore
                peg$currPos++;
                // @ts-ignore
            }
            else {
                // @ts-ignore
                s1 = peg$FAILED;
                // @ts-ignore
                if (peg$silentFails === 0) {
                    peg$fail(peg$e65);
                }
            }
            // @ts-ignore
            if (s1 === peg$FAILED) {
                // @ts-ignore
                if (input.charCodeAt(peg$currPos) === 13) {
                    // @ts-ignore
                    s1 = peg$c60;
                    // @ts-ignore
                    peg$currPos++;
                    // @ts-ignore
                }
                else {
                    // @ts-ignore
                    s1 = peg$FAILED;
                    // @ts-ignore
                    if (peg$silentFails === 0) {
                        peg$fail(peg$e66);
                    }
                }
                // @ts-ignore
                if (s1 === peg$FAILED) {
                    // @ts-ignore
                    if (input.charCodeAt(peg$currPos) === 10) {
                        // @ts-ignore
                        s1 = peg$c61;
                        // @ts-ignore
                        peg$currPos++;
                        // @ts-ignore
                    }
                    else {
                        // @ts-ignore
                        s1 = peg$FAILED;
                        // @ts-ignore
                        if (peg$silentFails === 0) {
                            peg$fail(peg$e67);
                        }
                    }
                    // @ts-ignore
                    if (s1 === peg$FAILED) {
                        // @ts-ignore
                        if (input.charCodeAt(peg$currPos) === 32) {
                            // @ts-ignore
                            s1 = peg$c62;
                            // @ts-ignore
                            peg$currPos++;
                            // @ts-ignore
                        }
                        else {
                            // @ts-ignore
                            s1 = peg$FAILED;
                            // @ts-ignore
                            if (peg$silentFails === 0) {
                                peg$fail(peg$e68);
                            }
                        }
                    }
                }
            }
            // @ts-ignore
            while (s1 !== peg$FAILED) {
                // @ts-ignore
                s0.push(s1);
                // @ts-ignore
                if (input.charCodeAt(peg$currPos) === 9) {
                    // @ts-ignore
                    s1 = peg$c59;
                    // @ts-ignore
                    peg$currPos++;
                    // @ts-ignore
                }
                else {
                    // @ts-ignore
                    s1 = peg$FAILED;
                    // @ts-ignore
                    if (peg$silentFails === 0) {
                        peg$fail(peg$e65);
                    }
                }
                // @ts-ignore
                if (s1 === peg$FAILED) {
                    // @ts-ignore
                    if (input.charCodeAt(peg$currPos) === 13) {
                        // @ts-ignore
                        s1 = peg$c60;
                        // @ts-ignore
                        peg$currPos++;
                        // @ts-ignore
                    }
                    else {
                        // @ts-ignore
                        s1 = peg$FAILED;
                        // @ts-ignore
                        if (peg$silentFails === 0) {
                            peg$fail(peg$e66);
                        }
                    }
                    // @ts-ignore
                    if (s1 === peg$FAILED) {
                        // @ts-ignore
                        if (input.charCodeAt(peg$currPos) === 10) {
                            // @ts-ignore
                            s1 = peg$c61;
                            // @ts-ignore
                            peg$currPos++;
                            // @ts-ignore
                        }
                        else {
                            // @ts-ignore
                            s1 = peg$FAILED;
                            // @ts-ignore
                            if (peg$silentFails === 0) {
                                peg$fail(peg$e67);
                            }
                        }
                        // @ts-ignore
                        if (s1 === peg$FAILED) {
                            // @ts-ignore
                            if (input.charCodeAt(peg$currPos) === 32) {
                                // @ts-ignore
                                s1 = peg$c62;
                                // @ts-ignore
                                peg$currPos++;
                                // @ts-ignore
                            }
                            else {
                                // @ts-ignore
                                s1 = peg$FAILED;
                                // @ts-ignore
                                if (peg$silentFails === 0) {
                                    peg$fail(peg$e68);
                                }
                            }
                        }
                    }
                }
            }
            // @ts-ignore
            peg$silentFails--;
            // @ts-ignore
            s1 = peg$FAILED;
            // @ts-ignore
            if (peg$silentFails === 0) {
                peg$fail(peg$e64);
            }
            // @ts-ignore
            peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };
            // @ts-ignore
            return s0;
        }
        // @ts-ignore
        function buildBinaryExpression(head, tail) {
            // @ts-ignore
            return tail.reduce(function (result, element) {
                // @ts-ignore
                return {
                    // @ts-ignore
                    type: "Operation",
                    // @ts-ignore
                    operator: element[0],
                    // @ts-ignore
                    left: result,
                    // @ts-ignore
                    right: element[2]
                };
                // @ts-ignore
            }, head);
        }
        // @ts-ignore
        function buildNode(type, value, child) {
            // @ts-ignore
            var node = { type: type };
            // @ts-ignore
            if (value)
                node.value = value;
            // @ts-ignore
            if (child)
                node.child = child;
            // @ts-ignore
            return node;
        }
        // @ts-ignore
        peg$result = peg$startRuleFunction();
        // @ts-ignore
        if (peg$result !== peg$FAILED && peg$currPos === input.length) {
            // @ts-ignore
            return peg$result;
            // @ts-ignore
        }
        else {
            // @ts-ignore
            if (peg$result !== peg$FAILED && peg$currPos < input.length) {
                // @ts-ignore
                peg$fail(peg$endExpectation());
            }
            // @ts-ignore
            throw peg$buildStructuredError(
            // @ts-ignore
            peg$maxFailExpected, 
            // @ts-ignore
            peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null, 
            // @ts-ignore
            peg$maxFailPos < input.length
                // @ts-ignore
                ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)
                // @ts-ignore
                : peg$computeLocation(peg$maxFailPos, peg$maxFailPos));
        }
    }
    // @ts-ignore
    return {
        SyntaxError: peg$SyntaxError,
        parse: peg$parse
    };
})();
peggyParser.SyntaxError.prototype.name = "PeggySyntaxError";
exports.parse = peggyParser.parse;
exports.PeggySyntaxError = peggyParser.SyntaxError;
